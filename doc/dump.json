[
  {
    "__docId__": 0,
    "kind": "file",
    "name": "src/core/Config.js",
    "content": "import _ from \"lodash\";\n\nconst defaultConfig = {\n    env : 'prod',\n    basePath : '/',\n    assetPath : '/'\n};\n\nclass Config {\n\n    constructor(bootstrapConfig) {\n\n        this.baseConfig = {};\n\n        // merge default config\n        _.defaults( this.baseConfig, bootstrapConfig, defaultConfig);\n\n        // strip first slashes on sub dir paths\n        this.baseConfig.assetPath = _.startsWith(this.baseConfig.assetPath, '/') ? this.baseConfig.assetPath.substr(1) : this.baseConfig.assetPath;\n\n        // ensure trailing slash\n        this.baseConfig.basePath += (_.endsWith(this.baseConfig.basePath, '/') ? '' : '/' );\n        this.baseConfig.assetPath += (_.endsWith(this.baseConfig.assetPath, '/') ? '' : '/' );\n\n        // auto detect protocol://domain:port\n        this.baseConfig.origin = location.protocol+'//'+location.hostname+(location.port ? ':'+location.port: '');\n\n    }\n\n    get env() {\n        return this.baseConfig.env;\n    }\n\n    get assetPath() {\n        return this.baseConfig.origin + this.baseConfig.basePath + this.baseConfig.assetPath;\n    }\n\n    get basePath() {\n        return this.baseConfig.origin + this.baseConfig.basePath;\n    }\n\n}\n\nexport default Config;",
    "static": true,
    "longname": "src/core/Config.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1,
    "kind": "variable",
    "name": "defaultConfig",
    "memberof": "src/core/Config.js",
    "static": true,
    "longname": "src/core/Config.js~defaultConfig",
    "access": null,
    "export": false,
    "importPath": "zimple/src/core/Config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"env\": string, \"basePath\": string, \"assetPath\": string}"
      ]
    }
  },
  {
    "__docId__": 2,
    "kind": "class",
    "name": "Config",
    "memberof": "src/core/Config.js",
    "static": true,
    "longname": "src/core/Config.js~Config",
    "access": null,
    "export": true,
    "importPath": "zimple/src/core/Config.js",
    "importStyle": "Config",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false
  },
  {
    "__docId__": 3,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/Config.js~Config",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Config.js~Config#constructor",
    "access": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "bootstrapConfig",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 4,
    "kind": "member",
    "name": "baseConfig",
    "memberof": "src/core/Config.js~Config",
    "static": false,
    "longname": "src/core/Config.js~Config#baseConfig",
    "access": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 5,
    "kind": "get",
    "name": "env",
    "memberof": "src/core/Config.js~Config",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Config.js~Config#env",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 6,
    "kind": "get",
    "name": "assetPath",
    "memberof": "src/core/Config.js~Config",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Config.js~Config#assetPath",
    "access": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 7,
    "kind": "get",
    "name": "basePath",
    "memberof": "src/core/Config.js~Config",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Config.js~Config#basePath",
    "access": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 8,
    "kind": "file",
    "name": "src/core/EventTarget.js",
    "content": "const EVENTS = '_EVENTS'; // Define a unique key for all instances to create event hash on\nconst LISTEN_TARGETS = '_LISTEN_TARGETS'; // Define a unique key for all instances to create a listen array on;\n\n/**\n * The EventTarget is a class that allows the use of custom events in it's instances. it is an implementation of the\n * Pub/Sub pattern.\n *\n * It is generally not used directly but is inherited from in other classes\n *\n */\nclass EventTarget {\n\n    /**\n     * This MUST be called by sub-classes to instantiate the correct properties where events are stored.\n     *\n     */\n    constructor() {\n\n        /**\n         * @private\n         * @type {{}}\n         */\n        this[EVENTS] = {};\n\n        /**\n         * @private\n         * @type {Array}\n         */\n        this[LISTEN_TARGETS] = [];\n\n    }\n\n    /**\n     * Register an event handler for a type\n     * @param {string} type - The type of the event. A custom human readable string.\n     * @param {function} handler - The function that will be invoked when the event is triggered. No signature is provided, it is up to the developer to determine what is passed to the listener at trigger time\n     * @param {Object} [context=this] - The object the listener will called on. Defaults to `this` and can be changed if event delegation is needed.\n     */\n    on(type, handler, context = this) {\n\n        if (typeof type === 'string') {\n\n            // ensure array of listeners for this type is available\n            if ( !this.hasListeners(type) ) {\n                this[EVENTS][type] = [];\n            }\n\n            this[EVENTS][type].push( {handler: handler, context : context} );\n\n        } else { // Assume we have been passed an object of events.\n\n            // loop over hash using key as type, and value as handler\n            for ( const key in type) {\n                if (type.hasOwnProperty(key)) {\n                    let value = type[key];\n                    this.on(key, value);\n                }\n            }\n\n        }\n\n    }\n\n    /**\n     * Register an event handler that will trigger only once\n     * @param {string} type - The type of the event. A custom human readable string.\n     * @param {function} handler - The function that will be invoked when the event is triggered. No signature is provided, it is up to the developer to determine what is passed to the listener at trigger time\n     * @param {Object} [context=this] - The object the listener will called on. Defaults to `this` and can be changed if event delegation is needed.\n     */\n    once(type, handler, context = this) {\n\n        // create surrogate handler that will execute once an remove event\n        const onceHandler = (...eventData) => {\n            handler.apply(this, eventData);\n            this.off(type, onceHandler);\n        };\n\n        // register our surrogate event\n        this.on(type, onceHandler, context);\n    }\n\n    /**\n     * Remove event handler, either of one type, or just one listener\n     * @param {string} type - The type of the event. A custom human readable string.\n     * @param {function} [handler] - The event handler to be removed. If unspecififed, all handlers of the supplied type are removed.\n     */\n    off(type, handler) {\n\n        if ( this.hasListeners(type) ) {\n\n            if (typeof handler === \"undefined\") {\n                this[EVENTS][type] = [];\n            } else {\n                const registeredHandler = this[EVENTS][type].find( (testHandler) => testHandler.handler === handler );\n                if (registeredHandler !== -1) {\n                    this[EVENTS][type].splice( this[EVENTS][type].lastIndexOf(registeredHandler) , 1);\n                }\n            }\n\n        }\n\n    }\n\n    /**\n     * Utility to allow EventTargets to listen to other EventTarget's events easily\n     * @param {EventTarget} target - The instance of EventTarget to listen to events on\n     * @param {string} type - The type of the event. A custom human readable string.\n     * @param {function} handler - The function that will be invoked when the event is triggered. No signature is provided, it is up to the developer to determine what is passed to the listener at trigger time\n     */\n    listenTo(target, type, handler) {\n\n        if ( !(target instanceof EventTarget) ) {\n            throw new Error('Attempting to listenTo an object that does not inherit from EventTarget');\n        }\n\n        // Determine if we are listening to this object yet\n        let targetListeners = this[LISTEN_TARGETS].find( (testTarget) => testTarget.target === target);\n\n        // If target listeners doesn't exist yet, add it here\n        if ( !targetListeners ) {\n            targetListeners = {target : target, listeners : {} };\n            this[LISTEN_TARGETS].push( targetListeners );\n        }\n\n        // make sure an array for this type of event is available\n        targetListeners.listeners[type] = targetListeners.listeners[type] || [];\n\n        // Add to register of functions\n        targetListeners.listeners[type].push( handler );\n\n        // bind event normally\n        target.on(type, handler, this);\n\n    }\n\n    /**\n     * Stop listening for events on another EventTarget\n     * @param {EventTarget} target - The instance of EventTarget to stop receiving events from.\n     * @param {string} type - The type of the event. A custom human readable string.\n     */\n    stopListening(target, type) {\n\n        // Determine if we are listening to this object yet\n        // var targetListeners = _.find(this[LISTEN_TARGETS], {target : target });\n        const targetListeners = this[LISTEN_TARGETS].find( (testTarget) => testTarget === target);\n\n        // If listeners are registered for this target\n        if ( targetListeners ) {\n\n            if (type) {\n\n                targetListeners.listeners[type].forEach( function (handler) {\n                    target.off(type, handler)\n                });\n\n            } else {\n\n                for (let typeIter of Object.keys(targetListeners.listeners) ) {\n\n                    targetListeners.listeners[typeIter].forEach( function (handler) {\n                        target.off(typeIter, handler)\n                    });\n\n                }\n\n            }\n\n        }\n\n    }\n\n    /**\n     * Determine if this object has events registered of a certain type\n     * @param {string} type - Event type to check.\n     * @returns {boolean} if the EventTarget has listeners for this type of event\n     */\n    hasListeners(type) {\n        return typeof this[EVENTS][type] !== 'undefined'\n    }\n\n    /**\n     * Trigger an event on this object\n     * @param {string} type - The event type who's listeners will be triggered\n     * @param {...*} eventParams - The parameters to be passed to the listening objects. Any number can be passed but it is recomended to only pass a single event object on which you may attach multiple properties.\n     */\n    trigger(type, ...eventParams) {\n\n        // if an event of this type has been registered on this event\n        if ( this.hasListeners(type) ) {\n\n            // loop over listeners registered for this event type\n            // note : could have used for of, but could need a Symbol polyfill which is too much code.\n            const handlers = this[EVENTS][type];\n            for ( const eventKey in handlers ) {\n\n                if ( handlers.hasOwnProperty(eventKey) ) {\n                    let event = this[EVENTS][type][eventKey];\n\n                    event.handler.apply(event.context, eventParams);\n                }\n\n            }\n\n        }\n\n    }\n\n\n}\n\n\nexport default EventTarget;",
    "static": true,
    "longname": "src/core/EventTarget.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 9,
    "kind": "variable",
    "name": "EVENTS",
    "memberof": "src/core/EventTarget.js",
    "static": true,
    "longname": "src/core/EventTarget.js~EVENTS",
    "access": null,
    "export": false,
    "importPath": "zimple/src/core/EventTarget.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 10,
    "kind": "variable",
    "name": "LISTEN_TARGETS",
    "memberof": "src/core/EventTarget.js",
    "static": true,
    "longname": "src/core/EventTarget.js~LISTEN_TARGETS",
    "access": null,
    "export": false,
    "importPath": "zimple/src/core/EventTarget.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 11,
    "kind": "class",
    "name": "EventTarget",
    "memberof": "src/core/EventTarget.js",
    "static": true,
    "longname": "src/core/EventTarget.js~EventTarget",
    "access": null,
    "export": true,
    "importPath": "zimple/src/core/EventTarget.js",
    "importStyle": "EventTarget",
    "description": "The EventTarget is a class that allows the use of custom events in it's instances. it is an implementation of the\nPub/Sub pattern.\n\nIt is generally not used directly but is inherited from in other classes",
    "lineNumber": 11,
    "interface": false
  },
  {
    "__docId__": 12,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/EventTarget.js~EventTarget",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/EventTarget.js~EventTarget#constructor",
    "access": null,
    "description": "This MUST be called by sub-classes to instantiate the correct properties where events are stored.",
    "lineNumber": 17,
    "params": []
  },
  {
    "__docId__": 13,
    "kind": "member",
    "name": "[EVENTS]",
    "memberof": "src/core/EventTarget.js~EventTarget",
    "static": false,
    "longname": "src/core/EventTarget.js~EventTarget#[EVENTS]",
    "access": "private",
    "description": "",
    "lineNumber": 23,
    "type": {
      "nullable": null,
      "types": [
        "{}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 14,
    "kind": "member",
    "name": "[LISTEN_TARGETS]",
    "memberof": "src/core/EventTarget.js~EventTarget",
    "static": false,
    "longname": "src/core/EventTarget.js~EventTarget#[LISTEN_TARGETS]",
    "access": "private",
    "description": "",
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 15,
    "kind": "method",
    "name": "on",
    "memberof": "src/core/EventTarget.js~EventTarget",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/EventTarget.js~EventTarget#on",
    "access": null,
    "description": "Register an event handler for a type",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "The type of the event. A custom human readable string."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": "The function that will be invoked when the event is triggered. No signature is provided, it is up to the developer to determine what is passed to the listener at trigger time"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "this",
        "defaultRaw": "this",
        "name": "context",
        "description": "The object the listener will called on. Defaults to `this` and can be changed if event delegation is needed."
      }
    ]
  },
  {
    "__docId__": 16,
    "kind": "method",
    "name": "once",
    "memberof": "src/core/EventTarget.js~EventTarget",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/EventTarget.js~EventTarget#once",
    "access": null,
    "description": "Register an event handler that will trigger only once",
    "lineNumber": 70,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "The type of the event. A custom human readable string."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": "The function that will be invoked when the event is triggered. No signature is provided, it is up to the developer to determine what is passed to the listener at trigger time"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "this",
        "defaultRaw": "this",
        "name": "context",
        "description": "The object the listener will called on. Defaults to `this` and can be changed if event delegation is needed."
      }
    ]
  },
  {
    "__docId__": 17,
    "kind": "method",
    "name": "off",
    "memberof": "src/core/EventTarget.js~EventTarget",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/EventTarget.js~EventTarget#off",
    "access": null,
    "description": "Remove event handler, either of one type, or just one listener",
    "lineNumber": 87,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "The type of the event. A custom human readable string."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "name": "handler",
        "description": "The event handler to be removed. If unspecififed, all handlers of the supplied type are removed."
      }
    ]
  },
  {
    "__docId__": 18,
    "kind": "method",
    "name": "listenTo",
    "memberof": "src/core/EventTarget.js~EventTarget",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/EventTarget.js~EventTarget#listenTo",
    "access": null,
    "description": "Utility to allow EventTargets to listen to other EventTarget's events easily",
    "lineNumber": 110,
    "params": [
      {
        "nullable": null,
        "types": [
          "EventTarget"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "The instance of EventTarget to listen to events on"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "The type of the event. A custom human readable string."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": "The function that will be invoked when the event is triggered. No signature is provided, it is up to the developer to determine what is passed to the listener at trigger time"
      }
    ]
  },
  {
    "__docId__": 19,
    "kind": "method",
    "name": "stopListening",
    "memberof": "src/core/EventTarget.js~EventTarget",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/EventTarget.js~EventTarget#stopListening",
    "access": null,
    "description": "Stop listening for events on another EventTarget",
    "lineNumber": 141,
    "params": [
      {
        "nullable": null,
        "types": [
          "EventTarget"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "The instance of EventTarget to stop receiving events from."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "The type of the event. A custom human readable string."
      }
    ]
  },
  {
    "__docId__": 20,
    "kind": "method",
    "name": "hasListeners",
    "memberof": "src/core/EventTarget.js~EventTarget",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/EventTarget.js~EventTarget#hasListeners",
    "access": null,
    "description": "Determine if this object has events registered of a certain type",
    "lineNumber": 177,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} if the EventTarget has listeners for this type of event"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "Event type to check."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "if the EventTarget has listeners for this type of event"
    }
  },
  {
    "__docId__": 21,
    "kind": "method",
    "name": "trigger",
    "memberof": "src/core/EventTarget.js~EventTarget",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/EventTarget.js~EventTarget#trigger",
    "access": null,
    "description": "Trigger an event on this object",
    "lineNumber": 186,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "The event type who's listeners will be triggered"
      },
      {
        "nullable": null,
        "types": [
          "...*"
        ],
        "spread": true,
        "optional": false,
        "name": "eventParams",
        "description": "The parameters to be passed to the listening objects. Any number can be passed but it is recomended to only pass a single event object on which you may attach multiple properties."
      }
    ]
  },
  {
    "__docId__": 22,
    "kind": "file",
    "name": "src/display/BaseView.js",
    "content": "// Third party dependencies\nimport _           from \"lodash\";\n\n// UZIK dependencies\nimport EventTarget from \"../core/EventTarget\";\nimport WindowManager from \"../utils/WindowManager\";\n\n/**\n * BaseView is the base class for organizing the DOM.\n * It is inspired by Backbone.js in certain regards, but is more ES6 and responsive friendly.\n *  *\n */\nclass BaseView extends EventTarget {\n\n    constructor(el, options = {}) {\n\n        super();\n\n        // Check supplied el parameter\n        if ( !el ) {\n            throw new Error('You must specify a root element for the View');\n        } else if ( !_.isElement(el) ) {\n            throw new Error('Supplied `el` argument needs to be a DOMElement');\n        }\n\n        // Save supplied values\n        this.el = el;\n        this.options = _.defaults(options); // TODO merge options\n\n        // Breakpoint handling\n        if (this.options.breakpoints) { // use only supplied breakpoints\n            this.breakpoints = _.filter( WindowManager.breakpoints, (bp) => _.includes(this.options.breakpoints, bp.name) );\n\n        } else { // use all breakpoints\n            this.breakpoints = _.clone( WindowManager.breakpoints );\n        }\n\n        // on first instantiation of any BaseView, bind the WindowManager.breakpoint handler\n        if ( !BaseView.instances.length ) {\n            WindowManager.on('breakpoint', breakpointHandler);\n        }\n\n        // Save newly created instance to static value\n        BaseView.instances.push( this );\n\n        // detect first breakpoint\n        this.currentBreakpoint = _.findLast(this.breakpoints, (bp) => WindowManager.width >= bp.value );\n\n    }\n\n    /* ==========================\n\n     Public Members\n\n     ========================== */\n\n    /**\n     * Function is called when breakpoint is changed\n     */\n    breakpointChanged(breakpoint, previousBreakpoint) {\n        this.currentBreakpoint = breakpoint;\n    }\n\n    /**\n     *  Bind a DOMEvent to the view, optionally filtered on the selector.\n     *\n     * @param type {String} Event typoe\n     * @param listener {Function} Event listener function that will be scoped to this view\n     * @param selector {String|Element} [this.el] if selector is a String, the string will be used to test matching using delegated events to `this.el`. If it's an Element then bind event directly to that element\n     *\n     */\n    addDomEvent(type, listener, selector = null) {\n\n        // init domEvents registry if not present\n        this._domEvents = this._domEvents || {};\n\n        // init registry for this type\n        this._domEvents[type] = this._domEvents[type] || [];\n\n        // type check selector\n        if ( selector && !( _.isString(selector) || _.isElement(selector) )) {\n            throw new Error('Invalid selector passed to addDomEvent. Must be String or DOMElement');\n        }\n\n        if ( !_.isFunction(listener) ) {\n            throw new Error('no event listener specified for addDomEvent');\n        }\n\n        // if the selector is an element, add event to it, otherwise use this.el for event delegation\n        let target = ( _.isElement(selector) ) ? selector : this.el;\n\n        // create internal listener that will be recorded\n        let internalListener = (event) => {\n\n            // init a flag to indicate if a selector has been found then go traverse up the DOM until this.el to see if an element matches\n            let inSelector = false;\n            let iterEl;\n\n            if ( !selector ) {\n                inSelector = true; // if no selector specified, always trigger\n            } else {\n                iterEl = event.target;\n\n                if (_.isString(selector)) {\n\n                    while (iterEl !== this.el) {\n\n                        // when clicking on SVG <use> tags in IE,\n                        // the event.target is actually the declaration element, and not the actual <use> tag\n                        // in that case, switch reference to the actual <use /> tag\n                        if (\"correspondingUseElement\" in iterEl) {\n                            iterEl = iterEl.correspondingUseElement;\n                        }\n\n                        // .matches does't exist on SVG elements in old IE\n                        if ( 'matches' in iterEl && iterEl.matches(selector)) {\n                            inSelector = true;\n                            break;\n                        } else {\n                            iterEl = iterEl.parentNode;\n                        }\n                    }\n\n                } else if (_.isElement(selector)) {\n                    iterEl = selector;\n                    inSelector = true;\n                }\n            }\n\n            if (inSelector) {\n                // Add found selector to event and transparently trigger\n                event.delegateTarget = iterEl;\n                listener.apply(this, [event]);\n            }\n\n        };\n\n        target.addEventListener(type, internalListener);\n\n        this._domEvents[type].push({target : target, listener: internalListener});\n    }\n\n    /**\n     * Remove DOM event from the element\n     * @param type {String}\n     * @param target {DOMElement}\n     *\n     */\n    removeDomEvent(type = 'all', target) {\n\n        if (this._domEvents) {\n\n            let events;\n            if (_.isUndefined(type) || type == 'all') {\n                events = this._domEvents; // remove all events if no type is specified\n            } else {\n                events = {};\n                events[type] = this._domEvents[type];\n            }\n\n            // for each event type\n            _.each(events, (eventListeners, iterType) => {\n\n                // we don't want to modify the array in place during the loop, so save removed event listeners to an array\n                let removed = [];\n\n                // loop over listener objects and remove\n                _.each(eventListeners, (listenerObj, i) => {\n\n                    if ( !target || listenerObj.target == target) {\n                        listenerObj.target.removeEventListener(iterType, listenerObj.listener);\n                        removed.push( i );\n                    }\n\n                });\n\n                // remove of listener objects now\n                removed.forEach( (i) => {\n                    eventListeners.splice(i);\n                });\n\n                // Delete the object if there are no more listeners for this type\n                if ( !eventListeners || eventListeners.length == 0) {\n                    delete this._domEvents[iterType];\n                }\n\n            });\n        }\n\n    }\n\n    /**\n     * Remove  DOM event listeners and remove the View element from the DOM.\n     */\n    remove() {\n        this.removeDomEvent();\n        this.el.parentNode.removeChild(this.el);\n    }\n\n    /**\n     * Removes DOM Element and DOM events. Unbinds other Events.\n     * Call this to clean up the view before dereferencing it.\n     */\n    destroy() {\n        this.stopListening();\n        this.remove();\n\n        // Remove from internal list of instances\n        BaseView.instances.splice( BaseView.instances.indexOf(this), 1);\n\n    }\n\n    /**\n     * Dummy function to implement resizing\n     */\n    resize() {\n\n    }\n\n    /**\n     * Test to see if the viewport is currently at a certain breakpoint\n     *\n     * Proxies WindowManager.minWidth\n     *\n     * @param breakpoint {Number|String|Object} a breakpoint name, object or numerical value. See WindowManager.minWidth for more info\n     * @returns {boolean}\n     */\n    minWidth(breakpoint) {\n        return WindowManager.minWidth( breakpoint );\n    }\n\n    /* ==========================\n\n     Private Members\n\n     ========================== */\n\n\n\n}\n\n/**\n * Static array of instances\n * @type {Array}\n */\nBaseView.instances = [];\n\n/**\n * Single event handler from WindowManager breakpoint event. Handles calling of breakpointChanged on each instance if applicable\n * @param event\n */\nfunction breakpointHandler(event) {\n    for (let instance of BaseView.instances) {\n        // get the max breakpoint this instance handles\n        var usedBreakpoint = _.findLast(instance.breakpoints, (bp) => event.breakpoint.value >= bp.value );\n\n        // Check it's not the current breakpoint and invoke breakpointChanged method\n        if ( !_.isEqual(usedBreakpoint, instance.currentBreakpoint) ) {\n            instance.breakpointChanged( usedBreakpoint, event.previous);\n        }\n    }\n}\n\n\nexport default BaseView;",
    "static": true,
    "longname": "src/display/BaseView.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 23,
    "kind": "function",
    "name": "breakpointHandler",
    "memberof": "src/display/BaseView.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/display/BaseView.js~breakpointHandler",
    "access": null,
    "export": false,
    "importPath": "zimple/src/display/BaseView.js",
    "importStyle": null,
    "description": "Single event handler from WindowManager breakpoint event. Handles calling of breakpointChanged on each instance if applicable",
    "lineNumber": 252,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 24,
    "kind": "class",
    "name": "BaseView",
    "memberof": "src/display/BaseView.js",
    "static": true,
    "longname": "src/display/BaseView.js~BaseView",
    "access": null,
    "export": true,
    "importPath": "zimple/src/display/BaseView.js",
    "importStyle": "BaseView",
    "description": "BaseView is the base class for organizing the DOM.\nIt is inspired by Backbone.js in certain regards, but is more ES6 and responsive friendly.\n *",
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "src/core/EventTarget.js~EventTarget"
    ]
  },
  {
    "__docId__": 25,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/display/BaseView.js~BaseView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/BaseView.js~BaseView#constructor",
    "access": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "el",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ]
  },
  {
    "__docId__": 26,
    "kind": "member",
    "name": "el",
    "memberof": "src/display/BaseView.js~BaseView",
    "static": false,
    "longname": "src/display/BaseView.js~BaseView#el",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 27,
    "kind": "member",
    "name": "options",
    "memberof": "src/display/BaseView.js~BaseView",
    "static": false,
    "longname": "src/display/BaseView.js~BaseView#options",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 28,
    "kind": "member",
    "name": "breakpoints",
    "memberof": "src/display/BaseView.js~BaseView",
    "static": false,
    "longname": "src/display/BaseView.js~BaseView#breakpoints",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 29,
    "kind": "member",
    "name": "breakpoints",
    "memberof": "src/display/BaseView.js~BaseView",
    "static": false,
    "longname": "src/display/BaseView.js~BaseView#breakpoints",
    "access": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 30,
    "kind": "member",
    "name": "currentBreakpoint",
    "memberof": "src/display/BaseView.js~BaseView",
    "static": false,
    "longname": "src/display/BaseView.js~BaseView#currentBreakpoint",
    "access": null,
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 31,
    "kind": "method",
    "name": "breakpointChanged",
    "memberof": "src/display/BaseView.js~BaseView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/BaseView.js~BaseView#breakpointChanged",
    "access": null,
    "description": "Function is called when breakpoint is changed",
    "lineNumber": 60,
    "params": [
      {
        "name": "breakpoint",
        "types": [
          "*"
        ]
      },
      {
        "name": "previousBreakpoint",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 32,
    "kind": "member",
    "name": "currentBreakpoint",
    "memberof": "src/display/BaseView.js~BaseView",
    "static": false,
    "longname": "src/display/BaseView.js~BaseView#currentBreakpoint",
    "access": null,
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 33,
    "kind": "method",
    "name": "addDomEvent",
    "memberof": "src/display/BaseView.js~BaseView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/BaseView.js~BaseView#addDomEvent",
    "access": null,
    "description": " Bind a DOMEvent to the view, optionally filtered on the selector.",
    "lineNumber": 72,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "{String} Event typoe"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "listener",
        "description": "{Function} Event listener function that will be scoped to this view"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "{String|Element} [this.el] if selector is a String, the string will be used to test matching using delegated events to `this.el`. If it's an Element then bind event directly to that element"
      }
    ]
  },
  {
    "__docId__": 34,
    "kind": "member",
    "name": "_domEvents",
    "memberof": "src/display/BaseView.js~BaseView",
    "static": false,
    "longname": "src/display/BaseView.js~BaseView#_domEvents",
    "access": null,
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 35,
    "kind": "method",
    "name": "removeDomEvent",
    "memberof": "src/display/BaseView.js~BaseView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/BaseView.js~BaseView#removeDomEvent",
    "access": null,
    "description": "Remove DOM event from the element",
    "lineNumber": 149,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "{String}"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "{DOMElement}"
      }
    ]
  },
  {
    "__docId__": 36,
    "kind": "method",
    "name": "remove",
    "memberof": "src/display/BaseView.js~BaseView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/BaseView.js~BaseView#remove",
    "access": null,
    "description": "Remove  DOM event listeners and remove the View element from the DOM.",
    "lineNumber": 195,
    "params": []
  },
  {
    "__docId__": 37,
    "kind": "method",
    "name": "destroy",
    "memberof": "src/display/BaseView.js~BaseView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/BaseView.js~BaseView#destroy",
    "access": null,
    "description": "Removes DOM Element and DOM events. Unbinds other Events.\nCall this to clean up the view before dereferencing it.",
    "lineNumber": 204,
    "params": []
  },
  {
    "__docId__": 38,
    "kind": "method",
    "name": "resize",
    "memberof": "src/display/BaseView.js~BaseView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/BaseView.js~BaseView#resize",
    "access": null,
    "description": "Dummy function to implement resizing",
    "lineNumber": 216,
    "params": []
  },
  {
    "__docId__": 39,
    "kind": "method",
    "name": "minWidth",
    "memberof": "src/display/BaseView.js~BaseView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/BaseView.js~BaseView#minWidth",
    "access": null,
    "description": "Test to see if the viewport is currently at a certain breakpoint\n\nProxies WindowManager.minWidth",
    "lineNumber": 228,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "breakpoint",
        "description": "{Number|String|Object} a breakpoint name, object or numerical value. See WindowManager.minWidth for more info"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 40,
    "kind": "file",
    "name": "src/display/ContainerView.js",
    "content": "// Third party dependencies\nimport _ from \"lodash\";\n\n// UZIK Depedencies\nimport BaseView from './BaseView';\n\n\n\n/**\n *\n * A view that can contain others.\n * Automatically call resize/breakpoints on children and destroy them on destroy\n *\n */\nclass ContainerView extends BaseView {\n\n    constructor(el, options) {\n\n        super(el, options);\n        this._subViews = [];\n\n    }\n\n    /* ==========================\n\n     Public Methods\n\n     ========================== */\n\n    destroy() {\n\n        // destroy and unregister all sub views\n        this._subViews.forEach( view => {\n            view.destroy();\n            this._removeSubView(view);\n        });\n\n        // after this view is done, call super destroyer to do the real cleanup\n        super.destroy();\n\n    }\n\n\n    resize() {\n        this._subViews.forEach( (view) => view.resize() );\n        super.resize();\n\n    }\n\n\n    /* ==========================\n\n     Private Methods\n\n     ========================== */\n\n    /**\n     * TODO rename to registerSubView\n     *\n     * @param view\n     * @private\n     */\n    _addSubView( view ) {\n\n        if ( !(view instanceof BaseView) ) {\n            throw new Error('Attempting to add a sub-view to the container that does not inherit from BaseView');\n        }\n\n        // only one copy of each view\n        if ( !_.includes(this._subViews, view) ) {\n            this._subViews.push(view);\n        }\n    }\n\n    /**\n     *  TODO rename to unregisterSubView\n     * @param view\n     * @private\n     */\n    _removeSubView( view ) {\n        let viewIndex = this._subViews.indexOf( view );\n\n        if (viewIndex > -1) {\n            this._subViews.splice(viewIndex,1);\n        }\n    }\n\n\n    /* ==========================\n\n     Event Handlers\n\n     ========================== */\n    _childClickHandler(event) {\n\n    }\n\n\n}\n\nexport default ContainerView;\n",
    "static": true,
    "longname": "src/display/ContainerView.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 41,
    "kind": "class",
    "name": "ContainerView",
    "memberof": "src/display/ContainerView.js",
    "static": true,
    "longname": "src/display/ContainerView.js~ContainerView",
    "access": null,
    "export": true,
    "importPath": "zimple/src/display/ContainerView.js",
    "importStyle": "ContainerView",
    "description": "\nA view that can contain others.\nAutomatically call resize/breakpoints on children and destroy them on destroy",
    "lineNumber": 15,
    "interface": false,
    "extends": [
      "src/display/BaseView.js~BaseView"
    ]
  },
  {
    "__docId__": 42,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/display/ContainerView.js~ContainerView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/ContainerView.js~ContainerView#constructor",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "el",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 43,
    "kind": "member",
    "name": "_subViews",
    "memberof": "src/display/ContainerView.js~ContainerView",
    "static": false,
    "longname": "src/display/ContainerView.js~ContainerView#_subViews",
    "access": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 44,
    "kind": "method",
    "name": "destroy",
    "memberof": "src/display/ContainerView.js~ContainerView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/ContainerView.js~ContainerView#destroy",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 45,
    "kind": "method",
    "name": "resize",
    "memberof": "src/display/ContainerView.js~ContainerView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/ContainerView.js~ContainerView#resize",
    "access": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 46,
    "kind": "method",
    "name": "_addSubView",
    "memberof": "src/display/ContainerView.js~ContainerView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/ContainerView.js~ContainerView#_addSubView",
    "access": "private",
    "description": "TODO rename to registerSubView",
    "lineNumber": 63,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "view",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 47,
    "kind": "method",
    "name": "_removeSubView",
    "memberof": "src/display/ContainerView.js~ContainerView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/ContainerView.js~ContainerView#_removeSubView",
    "access": "private",
    "description": " TODO rename to unregisterSubView",
    "lineNumber": 80,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "view",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 48,
    "kind": "method",
    "name": "_childClickHandler",
    "memberof": "src/display/ContainerView.js~ContainerView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/ContainerView.js~ContainerView#_childClickHandler",
    "access": null,
    "description": null,
    "lineNumber": 94,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 49,
    "kind": "file",
    "name": "src/display/Popin.js",
    "content": "// Third party dependencies\nimport _ from \"lodash\";\n\n// UZIK Depedencies\nimport BaseView from './BaseView';\n\n\nclass Popin extends BaseView {\n\n    constructor(el, options) {\n\n        super(el, options);\n\n\n        this.addDomEvent('click', this._closeClickHandler, '.close-popin');\n    }\n\n    /* ==========================\n\n     Public Methods\n\n     ========================== */\n\n\n    /* ==========================\n\n     Private Methods\n\n     ========================== */\n\n\n\n    /* ==========================\n\n     Event Handlers\n\n     ========================== */\n\n    _closeClickHandler() {\n        this.manager.closePopin();\n    }\n}\n\nexport default Popin;\n",
    "static": true,
    "longname": "src/display/Popin.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 50,
    "kind": "class",
    "name": "Popin",
    "memberof": "src/display/Popin.js",
    "static": true,
    "longname": "src/display/Popin.js~Popin",
    "access": null,
    "export": true,
    "importPath": "zimple/src/display/Popin.js",
    "importStyle": "Popin",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "src/display/BaseView.js~BaseView"
    ]
  },
  {
    "__docId__": 51,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/display/Popin.js~Popin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/Popin.js~Popin#constructor",
    "access": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "el",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 52,
    "kind": "method",
    "name": "_closeClickHandler",
    "memberof": "src/display/Popin.js~Popin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/Popin.js~Popin#_closeClickHandler",
    "access": null,
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 53,
    "kind": "file",
    "name": "src/display/PopinManager.js",
    "content": "// Third party dependencies\nimport _ from \"lodash\";\nimport anime from \"animejs\";\n\n// UZIK Depedencies\nimport BaseView from './BaseView';\n\n\nclass PopinManager extends BaseView {\n\n    constructor(el, options) {\n\n        super(el, options);\n\n        // create a bound function to listen to changes. Stored as a property enable adding/removing it sequentially\n        this._hashChangeHandler = _.bind(function(event){\n            if (window.location.hash !== '#popin-open') {\n                this.closePopin();\n            }\n        }, this);\n\n        this.addDomEvent('click', this.popinContainerClickHandler, this.el);\n\n    }\n\n    /* ==========================\n\n     Public Methods\n\n     ========================== */\n\n    /**\n     * Get Popin's DOM to display in popin-container\n     *\n     * @param {Object} popinView - instance of Popin class\n     */\n\n    displayPopin(popinView) {\n\n        if ( this.currentPopin ) {\n            this.closePopin();\n        }\n\n        // Save reference to current popin\n        this.currentPopin = popinView;\n        popinView.manager = this;\n\n        // add to popin-container if not already in page\n        if ( !this.el.contains(popinView.el) ) {\n            this.el.appendChild(popinView.el);\n        }\n\n        anime({\n            targets : this.el,\n            duration : 300,\n            opacity : 1,\n            easing : 'easeInOutQuart'\n        });\n\n        document.body.classList.add('popin-open');\n\n        window.location.hash = 'popin-open';\n        window.addEventListener('hashchange', this._hashChangeHandler);\n\n\n    }\n\n    /**\n     * Remove Popin from popin-container and hide that\n     *\n     * @param {boolean} cleanDom - use to know is method can remove DOM or not\n     */\n\n    closePopin(cleanDom) {\n\n        window.removeEventListener('hashchange', this._hashChangeHandler);\n\n        // Real remove when anime is complete\n        if (cleanDom == true) {\n            document.body.classList.remove('popin-open');\n\n            // remove element from container if it's a child\n            if ( _.includes( this.el.children, this.currentPopin.el ) ) {\n                this.el.removeChild( this.currentPopin.el );\n            }\n\n            window.location.hash = '';\n\n            this.currentPopin.manager = null;\n            this.currentPopin = null;\n        }\n\n        // Anime first then when its complete call closePopin with param 1 true\n        if (cleanDom == undefined) {\n\n            anime({\n                targets : this.el,\n                duration : 300,\n                opacity : 0,\n                easing : 'easeInOutQuart',\n                complete : () => {this.closePopin(true)}\n            });\n        }\n\n\n\n    }\n\n\n\n    /* ==========================\n\n     Private Methods\n\n     ========================== */\n\n    /* ==========================\n\n     Event Handlers\n\n     ========================== */\n\n\n    popinContainerClickHandler() {\n        if (event.target.classList.contains('popin-container')) {\n            this.closePopin();\n        }\n    }\n\n\n}\n\nexport default PopinManager;\n",
    "static": true,
    "longname": "src/display/PopinManager.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 54,
    "kind": "class",
    "name": "PopinManager",
    "memberof": "src/display/PopinManager.js",
    "static": true,
    "longname": "src/display/PopinManager.js~PopinManager",
    "access": null,
    "export": true,
    "importPath": "zimple/src/display/PopinManager.js",
    "importStyle": "PopinManager",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "src/display/BaseView.js~BaseView"
    ]
  },
  {
    "__docId__": 55,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/display/PopinManager.js~PopinManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/PopinManager.js~PopinManager#constructor",
    "access": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "el",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 56,
    "kind": "member",
    "name": "_hashChangeHandler",
    "memberof": "src/display/PopinManager.js~PopinManager",
    "static": false,
    "longname": "src/display/PopinManager.js~PopinManager#_hashChangeHandler",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "method",
    "name": "displayPopin",
    "memberof": "src/display/PopinManager.js~PopinManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/PopinManager.js~PopinManager#displayPopin",
    "access": null,
    "description": "Get Popin's DOM to display in popin-container",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "popinView",
        "description": "instance of Popin class"
      }
    ]
  },
  {
    "__docId__": 58,
    "kind": "member",
    "name": "currentPopin",
    "memberof": "src/display/PopinManager.js~PopinManager",
    "static": false,
    "longname": "src/display/PopinManager.js~PopinManager#currentPopin",
    "access": null,
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 59,
    "kind": "method",
    "name": "closePopin",
    "memberof": "src/display/PopinManager.js~PopinManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/PopinManager.js~PopinManager#closePopin",
    "access": null,
    "description": "Remove Popin from popin-container and hide that",
    "lineNumber": 74,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "cleanDom",
        "description": "use to know is method can remove DOM or not"
      }
    ]
  },
  {
    "__docId__": 60,
    "kind": "member",
    "name": "currentPopin",
    "memberof": "src/display/PopinManager.js~PopinManager",
    "static": false,
    "longname": "src/display/PopinManager.js~PopinManager#currentPopin",
    "access": null,
    "description": null,
    "lineNumber": 90,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 61,
    "kind": "method",
    "name": "popinContainerClickHandler",
    "memberof": "src/display/PopinManager.js~PopinManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/PopinManager.js~PopinManager#popinContainerClickHandler",
    "access": null,
    "description": null,
    "lineNumber": 124,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 62,
    "kind": "file",
    "name": "src/display/SplitText.js",
    "content": "import _ from \"lodash\";\n\nclass SplitText {\n\n    constructor(el, options = {}) {\n\n        this.el = el;\n\n        _.defaults(options, SplitText.defaultOptions);\n\n        // Save filter functions\n        this.wordFilter = options.wordFilter;\n        this.charFilter = options.charFilter;\n\n        this.lineClass = options.lineClass;\n        this.wordClass = options.wordClass;\n        this.charClass = options.charClass;\n\n        // Save a string representation of the elements original\n        this._originalHTML = this.el.innerHTML;\n\n        // Parse the contents of the element\n        this.parsedNodes = this._parseNodeContent( this.el );\n\n        this.el.classList.add('split-text');\n        this.el.innerHTML = this._renderString();\n\n    }\n\n\n    /**\n     * Remove elements generated by text splitting process and reinject original contents\n     */\n    reset() {\n        this.el.innerHTML = this._originalHTML;\n        this.el.classList.remove('split-text');\n    }\n\n\n    /*\n\n\n     PRIVATE METHODS\n\n\n     */\n\n    /**\n     * Return the composed HTML of split text\n     * @returns {String}\n     * @private\n     */\n     _renderString() {\n\n        var render = _.reduce( this.parsedNodes, (rendered, currentItem)=>{\n            let nodeHTML;\n            if ( _.isArray(currentItem) ) {\n                nodeHTML = this._createWord(currentItem).outerHTML+\" \"; // MUST include a space after the word or all the words will be treated as one long word\n            } else if ( _.isElement(currentItem) ) {\n\n                if (currentItem.tagName.toLowerCase() == 'br') { // If it's a BR, start a new line\n                    nodeHTML = `</div><div class=\"${this.lineClass}\">`\n                } else {\n                    nodeHTML = currentItem.outerHTML;\n                }\n\n            }\n            return rendered + nodeHTML;\n        }, `<div class=\"${this.lineClass}\">`); // start reduce with a new .line element\n\n        // Close line\n        render += \"</div>\";\n\n        return render;\n\n    }\n\n    /**\n     *\n     *\n     * @param content {String} single char to create an element for\n     * @returns {DOMElement} element representing a single character\n     * @private\n     */\n    _createChar(content) {\n        var char = document.createElement('span');\n        char.className = this.charClass;\n        char.textContent = content;\n        return this.charFilter(char);\n    }\n\n    /**\n     * Returns a span containing multiple characters\n     *\n     * @param charArray {Array} Array of characters\n     * @returns {DOMElement} an element containing multiple char elements\n     * @private\n     */\n    _createWord(charArray) {\n        var word = document.createElement('span');\n        word.className = this.wordClass;\n        // set the whole HTML of the word by mapping each char to a div, and reducting them to a string;\n        word.innerHTML = charArray.map( (char) => this._createChar(char) ).reduce( (fullWord, char) => fullWord + char.outerHTML, '');\n        return this.wordFilter( word );\n    }\n\n    /**\n     * Loop over element returning an array of elements and words. Each word is an array of chars.\n     *\n     * @param el\n     * @returns {Array}\n     */\n    _parseNodeContent(el) {\n        var children = el.childNodes;\n        var parsedNodes = [];\n\n        for (let i = 0; i < children.length; i++ ) {\n            let node = children[i];\n\n            if (node.nodeType == 1) { // node is Element\n\n                parsedNodes.push( node ); // TODO handle recursion if node has child nodes\n\n            } else if (node.nodeType == 3) { // node is text node\n\n                // trim off excess white space\n                let nodeValue = _.trim( node.nodeValue );\n\n                // don't parse empty nodes\n                if (nodeValue.length > 0) {\n                    // split a text node into specific words\n                    let words = nodeValue.split(/\\s/);\n\n                    // for each word, add an array of it's character\n                    words.forEach( (word) => {\n                        parsedNodes.push( word.split('') );\n                    });\n                }\n            }\n        }\n\n        return parsedNodes;\n    }\n\n}\n\nSplitText.defaultOptions = {\n    wordFilter: _.identity,\n    charFilter: _.identity,\n    lineClass : 'line',\n    wordClass: 'word',\n    charClass: 'char'\n};\n\n\nexport default SplitText;\n\n\n/*\n\nInternal representation\n\n[\n    [\n        'l',\n        'a'\n    ],\n    <br />,\n    [\n        'R',\n        'é',\n        'p',\n        'u',\n        'b',\n        'l',\n        'i',\n        'q',\n        'u',\n        'e'\n    ],\n    <br />,\n    [\n        'd',\n        'u'\n    ],\n    [\n        'v',\n        'e',\n        'n',\n        't'\n    ]\n]\n\n\n */\n",
    "static": true,
    "longname": "src/display/SplitText.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 63,
    "kind": "class",
    "name": "SplitText",
    "memberof": "src/display/SplitText.js",
    "static": true,
    "longname": "src/display/SplitText.js~SplitText",
    "access": null,
    "export": true,
    "importPath": "zimple/src/display/SplitText.js",
    "importStyle": "SplitText",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false
  },
  {
    "__docId__": 64,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/display/SplitText.js~SplitText",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/SplitText.js~SplitText#constructor",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "el",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ]
  },
  {
    "__docId__": 65,
    "kind": "member",
    "name": "el",
    "memberof": "src/display/SplitText.js~SplitText",
    "static": false,
    "longname": "src/display/SplitText.js~SplitText#el",
    "access": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 66,
    "kind": "member",
    "name": "wordFilter",
    "memberof": "src/display/SplitText.js~SplitText",
    "static": false,
    "longname": "src/display/SplitText.js~SplitText#wordFilter",
    "access": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 67,
    "kind": "member",
    "name": "charFilter",
    "memberof": "src/display/SplitText.js~SplitText",
    "static": false,
    "longname": "src/display/SplitText.js~SplitText#charFilter",
    "access": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 68,
    "kind": "member",
    "name": "lineClass",
    "memberof": "src/display/SplitText.js~SplitText",
    "static": false,
    "longname": "src/display/SplitText.js~SplitText#lineClass",
    "access": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 69,
    "kind": "member",
    "name": "wordClass",
    "memberof": "src/display/SplitText.js~SplitText",
    "static": false,
    "longname": "src/display/SplitText.js~SplitText#wordClass",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 70,
    "kind": "member",
    "name": "charClass",
    "memberof": "src/display/SplitText.js~SplitText",
    "static": false,
    "longname": "src/display/SplitText.js~SplitText#charClass",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 71,
    "kind": "member",
    "name": "_originalHTML",
    "memberof": "src/display/SplitText.js~SplitText",
    "static": false,
    "longname": "src/display/SplitText.js~SplitText#_originalHTML",
    "access": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 72,
    "kind": "member",
    "name": "parsedNodes",
    "memberof": "src/display/SplitText.js~SplitText",
    "static": false,
    "longname": "src/display/SplitText.js~SplitText#parsedNodes",
    "access": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 73,
    "kind": "method",
    "name": "reset",
    "memberof": "src/display/SplitText.js~SplitText",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/SplitText.js~SplitText#reset",
    "access": null,
    "description": "Remove elements generated by text splitting process and reinject original contents",
    "lineNumber": 34,
    "params": []
  },
  {
    "__docId__": 74,
    "kind": "method",
    "name": "_renderString",
    "memberof": "src/display/SplitText.js~SplitText",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/SplitText.js~SplitText#_renderString",
    "access": "private",
    "description": "Return the composed HTML of split text",
    "lineNumber": 53,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{String}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "_createChar",
    "memberof": "src/display/SplitText.js~SplitText",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/SplitText.js~SplitText#_createChar",
    "access": "private",
    "description": "",
    "lineNumber": 85,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{DOMElement} element representing a single character"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "content",
        "description": "{String} single char to create an element for"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DOMElement"
      ],
      "spread": false,
      "description": "element representing a single character"
    }
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "_createWord",
    "memberof": "src/display/SplitText.js~SplitText",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/SplitText.js~SplitText#_createWord",
    "access": "private",
    "description": "Returns a span containing multiple characters",
    "lineNumber": 99,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{DOMElement} an element containing multiple char elements"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "charArray",
        "description": "{Array} Array of characters"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DOMElement"
      ],
      "spread": false,
      "description": "an element containing multiple char elements"
    }
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "_parseNodeContent",
    "memberof": "src/display/SplitText.js~SplitText",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/SplitText.js~SplitText#_parseNodeContent",
    "access": null,
    "description": "Loop over element returning an array of elements and words. Each word is an array of chars.",
    "lineNumber": 113,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "el",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 78,
    "kind": "file",
    "name": "src/display/StepPopin.js",
    "content": "// Third party dependencies\nimport _ from \"lodash\";\nimport anime from \"animejs\";\n\n// UZIK Depedencies\nimport elIndex from \"../utils/dom/index\";\nimport removeClasses from \"../utils/dom/removeClasses\";\nimport Popin from './Popin';\n\nclass StepPopin extends Popin {\n\n    constructor(el, options) {\n\n        super(el, options);\n\n        this.steps = Array.from( this.el.querySelectorAll('.popin-step') );\n\n        let startIndex = Math.max( elIndex(this.steps, '.current'), 0); // avoid starting on -1, which won't work\n        this.currentStepIndex = startIndex;\n\n        this.changeItem(startIndex);\n\n        this.addDomEvent('click', this._navButtonClickHandler, '.step-nav');\n\n    }\n\n    nextItem() {\n        this.changeItem( this._getNextStepIndex( this.currentStepIndex) );\n    }\n\n    changeItem(stepIndex) {\n\n        if (stepIndex !== this.currentStepIndex) {\n\n            this.steps.forEach( (step) => removeClasses(step, 'current') );\n\n            if ( _.isNumber(this.currentStepIndex) ) {\n\n                this.steps[stepIndex].classList.add('current');\n            }\n\n            anime({\n                targets : 'body',\n                duration : 250,\n                scrollTop : this.el.querySelector('.column.section-header').clientHeight,\n                easing : 'easeInOutQuad'\n            });\n\n            this.currentStepIndex = stepIndex;\n        }\n    }\n\n\n    _getPrevStepIndex(index) {\n        return (index > 0) ? index - 1 : this.steps.length - 1;\n    }\n\n    _getNextStepIndex(index) {\n        return (index < this.steps.length - 1)  ? index + 1 : 0;\n    }\n\n\n    /* Event Handler */\n\n    _navButtonClickHandler(event) {\n        event.preventDefault();\n\n        let nextIndex = (event.delegateTarget.classList.contains('prev') ) ? this._getPrevStepIndex( this.currentStepIndex ) : this._getNextStepIndex( this.currentStepIndex );\n        this.changeItem( nextIndex );\n\n    }\n}\n\nexport default StepPopin;",
    "static": true,
    "longname": "src/display/StepPopin.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 79,
    "kind": "class",
    "name": "StepPopin",
    "memberof": "src/display/StepPopin.js",
    "static": true,
    "longname": "src/display/StepPopin.js~StepPopin",
    "access": null,
    "export": true,
    "importPath": "zimple/src/display/StepPopin.js",
    "importStyle": "StepPopin",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "src/display/Popin.js~Popin"
    ]
  },
  {
    "__docId__": 80,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/display/StepPopin.js~StepPopin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/StepPopin.js~StepPopin#constructor",
    "access": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "el",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 81,
    "kind": "member",
    "name": "steps",
    "memberof": "src/display/StepPopin.js~StepPopin",
    "static": false,
    "longname": "src/display/StepPopin.js~StepPopin#steps",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 82,
    "kind": "member",
    "name": "currentStepIndex",
    "memberof": "src/display/StepPopin.js~StepPopin",
    "static": false,
    "longname": "src/display/StepPopin.js~StepPopin#currentStepIndex",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 83,
    "kind": "method",
    "name": "nextItem",
    "memberof": "src/display/StepPopin.js~StepPopin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/StepPopin.js~StepPopin#nextItem",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 84,
    "kind": "method",
    "name": "changeItem",
    "memberof": "src/display/StepPopin.js~StepPopin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/StepPopin.js~StepPopin#changeItem",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "stepIndex",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 85,
    "kind": "member",
    "name": "currentStepIndex",
    "memberof": "src/display/StepPopin.js~StepPopin",
    "static": false,
    "longname": "src/display/StepPopin.js~StepPopin#currentStepIndex",
    "access": null,
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 86,
    "kind": "method",
    "name": "_getPrevStepIndex",
    "memberof": "src/display/StepPopin.js~StepPopin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/StepPopin.js~StepPopin#_getPrevStepIndex",
    "access": null,
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "index",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 87,
    "kind": "method",
    "name": "_getNextStepIndex",
    "memberof": "src/display/StepPopin.js~StepPopin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/StepPopin.js~StepPopin#_getNextStepIndex",
    "access": null,
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "index",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 88,
    "kind": "method",
    "name": "_navButtonClickHandler",
    "memberof": "src/display/StepPopin.js~StepPopin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/StepPopin.js~StepPopin#_navButtonClickHandler",
    "access": null,
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 89,
    "kind": "file",
    "name": "src/display/dom/empty.js",
    "content": "/**\n * Simple function to empty an element\n * @param el\n */\nconst empty = function (el) {\n    while( el.firstChild) el.removeChild(el.firstChild);\n};\n\nexport default empty",
    "static": true,
    "longname": "src/display/dom/empty.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 90,
    "kind": "function",
    "name": "empty",
    "memberof": "src/display/dom/empty.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/display/dom/empty.js~empty",
    "access": null,
    "export": true,
    "importPath": "zimple/src/display/dom/empty.js",
    "importStyle": "empty",
    "description": "Simple function to empty an element",
    "lineNumber": 5,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "el",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 91,
    "kind": "file",
    "name": "src/display/dom/index.js",
    "content": "import _ from 'lodash';\n\n/**\n * Get index of an searchCriteria in a collection of nodes or a parent searchCriteria\n * @param collection\n * @param searchCriteria\n */\nconst index = function (collection, searchCriteria) {\n\n    let index = -1;\n\n    // if collection parameter is an element, assume we want to find it's place among the other children of it's parent.\n    if (_.isElement(collection)) {\n\n        searchCriteria = collection;\n        collection = Array.from(collection.parentNode.children);\n    }\n\n    // check the collection is an array\n    if (_.isArray(collection)) {\n\n        // search as literal object\n        if (_.isElement(searchCriteria)) {\n            index = _.indexOf(collection, searchCriteria);\n            // search as CSS selector\n        } else if (_.isString(searchCriteria)) {\n            index = _.findIndex(collection, function (item) {\n                return item.matches(searchCriteria);\n            });\n        } else {\n            throw new Error('Search criteria must be an element or a String');\n        }\n    } else {\n        throw new Error('Trying to get an index in a non-Array collection')\n    }\n\n    return index;\n\n};\n\nexport default index;",
    "static": true,
    "longname": "src/display/dom/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 92,
    "kind": "function",
    "name": "index",
    "memberof": "src/display/dom/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/display/dom/index.js~index",
    "access": null,
    "export": true,
    "importPath": "zimple/src/display/dom/index.js",
    "importStyle": "index",
    "description": "Get index of an searchCriteria in a collection of nodes or a parent searchCriteria",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "collection",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "searchCriteria",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 93,
    "kind": "file",
    "name": "src/display/dom/removeClasses.js",
    "content": "/**\n *\n * Remove multiple classes from an Element. Support removing classes with wildcards\n *\n * @param element DOM element to remove classes from\n * @param patterns one or more class patterns. Patterns may be regular class names but can also contain `*` wildcards\n */\nconst removeClasses = function (element, ...patterns) {\n\n    // save classes to avoid transforming the classname of the element multiple times\n    var classes = element.className;\n\n    patterns.forEach( (pattern) => {\n\n        let patternRegex = pattern.replace('*', '[a-zA-Z0-9-]+');\n        patternRegex += '\\\\s?';\n\n        patternRegex = new RegExp(patternRegex);\n\n        classes = classes.replace( patternRegex, '' )\n\n    } );\n\n    // re assign new classes\n    element.className = classes;\n\n};\n\nexport default removeClasses;",
    "static": true,
    "longname": "src/display/dom/removeClasses.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 94,
    "kind": "function",
    "name": "removeClasses",
    "memberof": "src/display/dom/removeClasses.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/display/dom/removeClasses.js~removeClasses",
    "access": null,
    "export": true,
    "importPath": "zimple/src/display/dom/removeClasses.js",
    "importStyle": "removeClasses",
    "description": "\nRemove multiple classes from an Element. Support removing classes with wildcards",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "DOM element to remove classes from"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "patterns",
        "description": "one or more class patterns. Patterns may be regular class names but can also contain `*` wildcards"
      }
    ]
  },
  {
    "__docId__": 95,
    "kind": "file",
    "name": "src/display/dom/stringToElement.js",
    "content": "/**\n * Turns a string representing one or more DOM elements into usable objects.\n * @param {string} sourceString\n * @returns {Element|DocumentFragment} The DOM representation of the string. If multiple root tags are present in the\n *     string, it will return a DocumentFragment\n */\nconst stringToElement = function (sourceString) {\n    // create a dummy element that is used\n    let elementIterator = document.createElement(\"div\");\n    let i;\n\n    elementIterator.innerHTML = sourceString;\n\n    if ( elementIterator.children.length > 1 ) { // return document fragment\n        let docFrag = document.createDocumentFragment();\n        while (i = elementIterator.firstChild ) {\n            docFrag.appendChild(i)\n        }\n\n        return docFrag;\n\n    } else { // just return first element\n        return elementIterator.firstElementChild;\n    }\n\n};\n\nexport default stringToElement;",
    "static": true,
    "longname": "src/display/dom/stringToElement.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 96,
    "kind": "function",
    "name": "stringToElement",
    "memberof": "src/display/dom/stringToElement.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/display/dom/stringToElement.js~stringToElement",
    "access": null,
    "export": true,
    "importPath": "zimple/src/display/dom/stringToElement.js",
    "importStyle": "stringToElement",
    "description": "Turns a string representing one or more DOM elements into usable objects.",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Element|DocumentFragment} The DOM representation of the string. If multiple root tags are present in the\n    string, it will return a DocumentFragment"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "sourceString",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Element",
        "DocumentFragment"
      ],
      "spread": false,
      "description": "The DOM representation of the string. If multiple root tags are present in the\n    string, it will return a DocumentFragment"
    }
  },
  {
    "__docId__": 97,
    "kind": "file",
    "name": "src/display/form/Form.js",
    "content": "import xhr from \"xhr\";\n\nimport ContainerView from '../ContainerView';\nimport TextInput from './TextInput';\nimport Select from './Select';\n\n// full syntax is #PREFILL_KEY:inputname=inputvalue&inputname2=inputvalue2\nconst PREFILL_KEY = 'form-prefill';\n\nconst triggerFormEvent = function (input, type) {\n\n    let event = document.createEvent('Event');\n    event.initEvent(type, true, false);\n    input.dispatchEvent( event );\n\n};\n\nclass Form extends ContainerView {\n\n    constructor(el, options) {\n\n        super(el, options);\n\n        // Create inputs\n        this.inputs = Array.from( this.el.querySelectorAll('input[type=\"text\"], input[type=\"email\"], input[type=\"tel\"], select, textarea') ).map( (input) => {\n\n            let inputComponent;\n\n            // check tag name and create sub views / components\n            switch ( input.tagName.toLowerCase() ) {\n                case 'textarea':\n                case 'input':\n                    inputComponent = new TextInput( input );\n                    break;\n                case 'select':\n                    inputComponent = new Select( input );\n                    break;\n            }\n\n            if (inputComponent) {\n                this._addSubView( inputComponent );\n            }\n\n            return inputComponent;\n\n        });\n\n        this._prefillForm();\n\n    }\n\n\n    _prefillForm() {\n\n        // Prefill inputs with value specified in hash part of URL\n        let hash = window.location.hash;\n\n        // match to a particular key\n        if ( hash.substr(1, PREFILL_KEY.length) == PREFILL_KEY ) {\n\n            // get values\n            let prefillValues = hash.split(':')[1].split('&');\n\n            prefillValues.forEach( (prefilled) => {\n\n                let [inputName, inputValue] = prefilled.split('=');\n\n                let input = this.el.elements[inputName];\n\n                switch ( input.tagName.toLowerCase() ) {\n                    case 'textarea':\n                    case 'input':\n                        input.value = inputValue;\n                        triggerFormEvent(input, 'input');\n                        break;\n                    case 'select':\n                        input.selectedIndex = inputValue;\n                        triggerFormEvent(input, 'change');\n                        break;\n                }\n\n\n            });\n\n\n        }\n\n    }\n\n    /**\n     *\n     * TODO rename this\n     */\n    AJAXMethod() {\n        let that = this;\n        let formData = new FormData(this.el);\n        let action  = this.el.action;\n        let method  = this.el.method;\n\n        xhr({\n            body: formData,\n            uri: action,\n            method: method\n        }, function (err, resp, body) {\n\n            that.trigger('response', resp);\n\n\n        });\n\n    }\n\n}\n\nexport default Form;",
    "static": true,
    "longname": "src/display/form/Form.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 98,
    "kind": "variable",
    "name": "PREFILL_KEY",
    "memberof": "src/display/form/Form.js",
    "static": true,
    "longname": "src/display/form/Form.js~PREFILL_KEY",
    "access": null,
    "export": false,
    "importPath": "zimple/src/display/form/Form.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 99,
    "kind": "function",
    "name": "triggerFormEvent",
    "memberof": "src/display/form/Form.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/display/form/Form.js~triggerFormEvent",
    "access": null,
    "export": false,
    "importPath": "zimple/src/display/form/Form.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "input",
        "types": [
          "*"
        ]
      },
      {
        "name": "type",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 100,
    "kind": "class",
    "name": "Form",
    "memberof": "src/display/form/Form.js",
    "static": true,
    "longname": "src/display/form/Form.js~Form",
    "access": null,
    "export": true,
    "importPath": "zimple/src/display/form/Form.js",
    "importStyle": "Form",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "src/display/ContainerView.js~ContainerView"
    ]
  },
  {
    "__docId__": 101,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/display/form/Form.js~Form",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/form/Form.js~Form#constructor",
    "access": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "el",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 102,
    "kind": "member",
    "name": "inputs",
    "memberof": "src/display/form/Form.js~Form",
    "static": false,
    "longname": "src/display/form/Form.js~Form#inputs",
    "access": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 103,
    "kind": "method",
    "name": "_prefillForm",
    "memberof": "src/display/form/Form.js~Form",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/form/Form.js~Form#_prefillForm",
    "access": null,
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 104,
    "kind": "method",
    "name": "AJAXMethod",
    "memberof": "src/display/form/Form.js~Form",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/form/Form.js~Form#AJAXMethod",
    "access": null,
    "description": "\nTODO rename this",
    "lineNumber": 94,
    "params": []
  },
  {
    "__docId__": 105,
    "kind": "file",
    "name": "src/display/form/Select.js",
    "content": "// Third party dependencies\nimport _ from \"lodash\";\nimport bowser from 'bowser';\nimport anime from \"animejs\";\n\n// UZIK Depedencies\n\n\n// Local app Dependencies\nimport BaseView          from '../BaseView';\n\n\n// Hidden consts\nvar instances = [];\n\nclass Select extends BaseView {\n\n    constructor(el, options) {\n\n        let container = (el.tagName.toLowerCase() == 'select') ? el.parentElement : el;\n\n        if ( el.classList.contains('custom-select') ) {\n            console.warn('Custom select initantiated without container');\n        }\n\n        super(container, options);\n\n        this.textSearchBuffer = '';\n\n        this.nativeSelect   = this.el.querySelector('select');\n        this.label          = this.el.querySelector('.custom-select-label');\n\n\n        if (bowser.mobile || bowser.tablet) {\n            this.el.classList.add('mobile-device');\n        } else {\n            this.hasCustomOptionsList = true;\n        }\n\n        if (this.hasCustomOptionsList) {\n            this._createCustomOptionsList();\n        }\n\n        instances.push(this);\n\n\n\n        this.render();\n\n        this.addDomEvent('change', this.render, this.nativeSelect );\n        this.addDomEvent('click', this._toggleCustomOptions, this.label);\n        this.addDomEvent('click', this._customOptionsClickHandler, '.options li');\n        this.addDomEvent('click', this._bodyClickHandler, document.body);\n\n    }\n\n    /* ==========================\n\n     Public Methods\n\n     ========================== */\n\n    render() {\n        this.label.innerHTML = this.nativeSelect.options[this.nativeSelect.selectedIndex].text;\n    }\n\n    setSelectedOption(selectedIndex) {\n\n        let oldOption = this.nativeSelect.selectedIndex;\n\n        this.nativeSelect.selectedIndex = selectedIndex;\n        this.nativeSelect.options[ selectedIndex ].setAttribute('selected', 'selected');\n        this.nativeSelect.options[ oldOption ].removeAttribute('selected');\n\n        this.customOptions[ selectedIndex ].setAttribute('selected', 'selected');\n        this.customOptions[ oldOption ].removeAttribute('selected');\n\n        this.render();\n    }\n\n    breakpointChanged(breakpoint, previousBreakpoint) {\n\n    }\n\n    /* ==========================\n\n     Private Methods\n\n     ========================== */\n\n    _createCustomOptionsList() {\n\n        this.customOptionsList = document.createElement('ul');\n        this.customOptionsList.setAttribute('class', 'options');\n\n\n        this.customOptions = _.map(this.el.querySelectorAll('option'), (option) => {\n            let customOption = document.createElement('li');\n\n            // text and value\n            customOption.setAttribute('data-value', option.value);\n            customOption.innerHTML = option.innerHTML;\n\n            // Other value\n            if (option.disabled) {\n                customOption.setAttribute('disabled', 'disabled');\n            }\n\n            if (option.selected) {\n                customOption.setAttribute('selected', 'selected');\n            }\n\n            this.customOptionsList.appendChild( customOption );\n\n            return customOption;\n        });\n\n\n        // hide and add to DOM\n        this._hideCustomOptions();\n        this.el.appendChild ( this.customOptionsList );\n    }\n\n    _toggleCustomOptions() {\n        if ( this.el.classList.contains('options-list-visible') ) {\n            this._hideCustomOptions();\n        } else {\n            this._showCustomOptions();\n        }\n    }\n\n    _showCustomOptions() {\n        this.el.classList.add('options-list-visible');\n\n        _.invokeMap( _.without( instances, this ), '_hideCustomOptions' );\n\n        this.addDomEvent('keypress', this._bindCursorEvent, document.body);\n\n    }\n\n    _hideCustomOptions() {\n        this.el.classList.remove('options-list-visible');\n        this.removeDomEvent('keypress', document.body);\n    }\n\n\n    _resetSearchBuffer() {\n        let that = this;\n        if( _.isNumber(this.textSearchTimeout) ) {\n            window.clearTimeout(this.textSearchTimeout);\n        }\n\n        this.textSearchTimeout = window.setTimeout( function () {\n            that.textSearchBuffer = '';\n        }, 1000);\n    }\n\n    _searchOptions(optionText) {\n        let foundOption = _.find( this.customOptions, function (option) {\n            return (option.innerHTML.substr(0, optionText.length).toLowerCase() == optionText.toLowerCase() );\n        });\n\n        if (foundOption) {\n            this._setCursor( this.customOptions.indexOf( foundOption ) );\n        }\n    }\n\n\n    _setCursor(index) {\n        this.cursorIndex = index;\n\n        let cursorOption = this.customOptions[index];\n\n        _.forEach( this.customOptions, function (option) {\n            if ( option === cursorOption ) {\n                option.classList.add('cursor');\n            } else {\n                option.classList.remove('cursor');\n            }\n        });\n\n        // TODO remove this to a sub class, no animejs in UZIK\n        let scrollTo = anime({\n            targets : this.customOptionsList,\n            duration : 300,\n            scrollTop : cursorOption.offsetTop,\n            easing : 'easeInOutQuad'\n        })\n    }\n\n\n    /* ==========================\n\n     Event Handlers\n\n     ========================== */\n    _customOptionsClickHandler(event) {\n        // prevent selection of disabled options\n\n        if ( !event.delegateTarget.hasAttribute('disabled') ) {\n            this.setSelectedOption( this.customOptions.indexOf( event.delegateTarget ) );\n            this._hideCustomOptions();\n        }\n    }\n\n    _bodyClickHandler(event) {\n        if ( !(this.el.contains(event.target) && this.el !== event.target) ) {\n            this._hideCustomOptions();\n        }\n    }\n\n    _bindCursorEvent() {\n\n        if (event.keyCode == 13) {\n            this.setSelectedOption( this.cursorIndex );\n            this._hideCustomOptions();\n        } else {\n            this.textSearchBuffer += String.fromCharCode( event.which );\n            this._searchOptions( this.textSearchBuffer );\n            this._resetSearchBuffer();\n        }\n    }\n\n\n}\n\nexport default Select;\n",
    "static": true,
    "longname": "src/display/form/Select.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 106,
    "kind": "variable",
    "name": "instances",
    "memberof": "src/display/form/Select.js",
    "static": true,
    "longname": "src/display/form/Select.js~instances",
    "access": null,
    "export": false,
    "importPath": "zimple/src/display/form/Select.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 107,
    "kind": "class",
    "name": "Select",
    "memberof": "src/display/form/Select.js",
    "static": true,
    "longname": "src/display/form/Select.js~Select",
    "access": null,
    "export": true,
    "importPath": "zimple/src/display/form/Select.js",
    "importStyle": "Select",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "src/display/BaseView.js~BaseView"
    ]
  },
  {
    "__docId__": 108,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/display/form/Select.js~Select",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/form/Select.js~Select#constructor",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "el",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 109,
    "kind": "member",
    "name": "textSearchBuffer",
    "memberof": "src/display/form/Select.js~Select",
    "static": false,
    "longname": "src/display/form/Select.js~Select#textSearchBuffer",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 110,
    "kind": "member",
    "name": "nativeSelect",
    "memberof": "src/display/form/Select.js~Select",
    "static": false,
    "longname": "src/display/form/Select.js~Select#nativeSelect",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 111,
    "kind": "member",
    "name": "label",
    "memberof": "src/display/form/Select.js~Select",
    "static": false,
    "longname": "src/display/form/Select.js~Select#label",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 112,
    "kind": "member",
    "name": "hasCustomOptionsList",
    "memberof": "src/display/form/Select.js~Select",
    "static": false,
    "longname": "src/display/form/Select.js~Select#hasCustomOptionsList",
    "access": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 113,
    "kind": "method",
    "name": "render",
    "memberof": "src/display/form/Select.js~Select",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/form/Select.js~Select#render",
    "access": null,
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 114,
    "kind": "method",
    "name": "setSelectedOption",
    "memberof": "src/display/form/Select.js~Select",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/form/Select.js~Select#setSelectedOption",
    "access": null,
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "selectedIndex",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 115,
    "kind": "method",
    "name": "breakpointChanged",
    "memberof": "src/display/form/Select.js~Select",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/form/Select.js~Select#breakpointChanged",
    "access": null,
    "description": null,
    "lineNumber": 81,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "breakpoint",
        "types": [
          "*"
        ]
      },
      {
        "name": "previousBreakpoint",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 116,
    "kind": "method",
    "name": "_createCustomOptionsList",
    "memberof": "src/display/form/Select.js~Select",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/form/Select.js~Select#_createCustomOptionsList",
    "access": null,
    "description": null,
    "lineNumber": 91,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 117,
    "kind": "member",
    "name": "customOptionsList",
    "memberof": "src/display/form/Select.js~Select",
    "static": false,
    "longname": "src/display/form/Select.js~Select#customOptionsList",
    "access": null,
    "description": null,
    "lineNumber": 93,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 118,
    "kind": "member",
    "name": "customOptions",
    "memberof": "src/display/form/Select.js~Select",
    "static": false,
    "longname": "src/display/form/Select.js~Select#customOptions",
    "access": null,
    "description": null,
    "lineNumber": 97,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 119,
    "kind": "method",
    "name": "_toggleCustomOptions",
    "memberof": "src/display/form/Select.js~Select",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/form/Select.js~Select#_toggleCustomOptions",
    "access": null,
    "description": null,
    "lineNumber": 124,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 120,
    "kind": "method",
    "name": "_showCustomOptions",
    "memberof": "src/display/form/Select.js~Select",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/form/Select.js~Select#_showCustomOptions",
    "access": null,
    "description": null,
    "lineNumber": 132,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 121,
    "kind": "method",
    "name": "_hideCustomOptions",
    "memberof": "src/display/form/Select.js~Select",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/form/Select.js~Select#_hideCustomOptions",
    "access": null,
    "description": null,
    "lineNumber": 141,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 122,
    "kind": "method",
    "name": "_resetSearchBuffer",
    "memberof": "src/display/form/Select.js~Select",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/form/Select.js~Select#_resetSearchBuffer",
    "access": null,
    "description": null,
    "lineNumber": 147,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 123,
    "kind": "member",
    "name": "textSearchTimeout",
    "memberof": "src/display/form/Select.js~Select",
    "static": false,
    "longname": "src/display/form/Select.js~Select#textSearchTimeout",
    "access": null,
    "description": null,
    "lineNumber": 153,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 124,
    "kind": "method",
    "name": "_searchOptions",
    "memberof": "src/display/form/Select.js~Select",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/form/Select.js~Select#_searchOptions",
    "access": null,
    "description": null,
    "lineNumber": 158,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "optionText",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 125,
    "kind": "method",
    "name": "_setCursor",
    "memberof": "src/display/form/Select.js~Select",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/form/Select.js~Select#_setCursor",
    "access": null,
    "description": null,
    "lineNumber": 169,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "index",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 126,
    "kind": "member",
    "name": "cursorIndex",
    "memberof": "src/display/form/Select.js~Select",
    "static": false,
    "longname": "src/display/form/Select.js~Select#cursorIndex",
    "access": null,
    "description": null,
    "lineNumber": 170,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 127,
    "kind": "method",
    "name": "_customOptionsClickHandler",
    "memberof": "src/display/form/Select.js~Select",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/form/Select.js~Select#_customOptionsClickHandler",
    "access": null,
    "description": null,
    "lineNumber": 197,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 128,
    "kind": "method",
    "name": "_bodyClickHandler",
    "memberof": "src/display/form/Select.js~Select",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/form/Select.js~Select#_bodyClickHandler",
    "access": null,
    "description": null,
    "lineNumber": 206,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 129,
    "kind": "method",
    "name": "_bindCursorEvent",
    "memberof": "src/display/form/Select.js~Select",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/form/Select.js~Select#_bindCursorEvent",
    "access": null,
    "description": null,
    "lineNumber": 212,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 130,
    "kind": "member",
    "name": "textSearchBuffer",
    "memberof": "src/display/form/Select.js~Select",
    "static": false,
    "longname": "src/display/form/Select.js~Select#textSearchBuffer",
    "access": null,
    "description": null,
    "lineNumber": 218,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 131,
    "kind": "file",
    "name": "src/display/form/TextInput.js",
    "content": "// Third party dependencies\n// import _ from \"lodash\";\n\n// UZIK Depedencies\n\n\n// Local app Dependencies\nimport BaseView          from '../BaseView';\n\n\n// Hidden consts\n\n/**\n *\n */\nclass TextInput extends BaseView {\n\n    constructor(el, options) {\n\n        super(el, options);\n\n        this.parent         = el.parentNode;\n        this.labelText      = this.parent.querySelector('.label-text');\n\n        if (this.el.value.length > 0) {\n            this._hideLabel();\n        }\n\n        this.addDomEvent('focus', this._inputClickHandler);\n        this.addDomEvent('input', this._inputTypingHandler);\n        this.addDomEvent('click', this._inputClickHandler, this.labelText);\n\n    }\n\n    /* ==========================\n\n     Public Methods\n\n     ========================== */\n\n    breakpointChanged(breakpoint, previousBreakpoint) {\n\n    }\n\n    /* ==========================\n\n     Private Methods\n\n     ========================== */\n    _hideLabel() {\n        this.parent.classList.add('typing');\n    }\n\n    _showLabel() {\n        this.parent.classList.remove('typing');\n    }\n\n\n    /* ==========================\n\n     Event Handlers\n\n     ========================== */\n    _inputClickHandler() {\n        this.el.focus();\n    }\n\n    _inputTypingHandler() {\n\n        if ( this.el.value.length > 0 ) {\n            this._hideLabel();\n        } else if ( !this.el.value.length ) {\n            this._showLabel();\n        }\n    }\n\n\n}\n\nexport default TextInput;\n",
    "static": true,
    "longname": "src/display/form/TextInput.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 132,
    "kind": "class",
    "name": "TextInput",
    "memberof": "src/display/form/TextInput.js",
    "static": true,
    "longname": "src/display/form/TextInput.js~TextInput",
    "access": null,
    "export": true,
    "importPath": "zimple/src/display/form/TextInput.js",
    "importStyle": "TextInput",
    "description": "",
    "lineNumber": 16,
    "interface": false,
    "extends": [
      "src/display/BaseView.js~BaseView"
    ]
  },
  {
    "__docId__": 133,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/display/form/TextInput.js~TextInput",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/form/TextInput.js~TextInput#constructor",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "el",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 134,
    "kind": "member",
    "name": "parent",
    "memberof": "src/display/form/TextInput.js~TextInput",
    "static": false,
    "longname": "src/display/form/TextInput.js~TextInput#parent",
    "access": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 135,
    "kind": "member",
    "name": "labelText",
    "memberof": "src/display/form/TextInput.js~TextInput",
    "static": false,
    "longname": "src/display/form/TextInput.js~TextInput#labelText",
    "access": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 136,
    "kind": "method",
    "name": "breakpointChanged",
    "memberof": "src/display/form/TextInput.js~TextInput",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/form/TextInput.js~TextInput#breakpointChanged",
    "access": null,
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "breakpoint",
        "types": [
          "*"
        ]
      },
      {
        "name": "previousBreakpoint",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 137,
    "kind": "method",
    "name": "_hideLabel",
    "memberof": "src/display/form/TextInput.js~TextInput",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/form/TextInput.js~TextInput#_hideLabel",
    "access": null,
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 138,
    "kind": "method",
    "name": "_showLabel",
    "memberof": "src/display/form/TextInput.js~TextInput",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/form/TextInput.js~TextInput#_showLabel",
    "access": null,
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 139,
    "kind": "method",
    "name": "_inputClickHandler",
    "memberof": "src/display/form/TextInput.js~TextInput",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/form/TextInput.js~TextInput#_inputClickHandler",
    "access": null,
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 140,
    "kind": "method",
    "name": "_inputTypingHandler",
    "memberof": "src/display/form/TextInput.js~TextInput",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/display/form/TextInput.js~TextInput#_inputTypingHandler",
    "access": null,
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 141,
    "kind": "file",
    "name": "src/index.js",
    "content": "// TODO include all modules here in objects as packages for simplicity ?",
    "static": true,
    "longname": "src/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 142,
    "kind": "file",
    "name": "src/input/Keyboard.js",
    "content": "import EventTarget from '../core/EventTarget';\n\n/**\n * Mouse class provides a small abstraction layer to make Mouse events more EventTarget friendly\n *\n * TODO handle dragging\n *\n */\nclass Keyboard extends EventTarget {\n\n    constructor(target = window.document) {\n        super();\n\n        this.target = target;\n\n        // setup events\n        this._keyboardEvents = {\n            press   : this._keyPressHandler.bind( this ),\n            down    : this._keyDownHandler.bind( this )\n        };\n\n        target.addEventListener('keypress', this._keyboardEvents.press);\n        target.addEventListener('keydown', this._keyboardEvents.down);\n\n    }\n\n    destroy() {\n        this.target.removeEventListener('keypress', this._keyboardEvents.press);\n        this.target.removeEventListener('keydown', this._keyboardEvents.down);\n    }\n\n    _keyPressHandler(event) {\n\n\n        // save latest points\n        this.trigger('press', event);\n\n    }\n\n    _keyDownHandler(event) {\n\n        // console.log(event);\n\n        // get char\n        let symbol = Keyboard.codes[ event.keyCode ];\n\n        event.symbol = symbol;\n\n        // save latest points\n        this.trigger('down', event);\n    }\n\n}\n\n// constant type values for comparison\nKeyboard.keys = {};\nKeyboard.keys.ESC       = 27;\n\n// Inverse lookup for keyboard values;\nKeyboard.codes = []\nKeyboard.codes[ 27 ]    = 'ESC';\n\n\n\n\n\nexport default Keyboard;\n",
    "static": true,
    "longname": "src/input/Keyboard.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 143,
    "kind": "class",
    "name": "Keyboard",
    "memberof": "src/input/Keyboard.js",
    "static": true,
    "longname": "src/input/Keyboard.js~Keyboard",
    "access": null,
    "export": true,
    "importPath": "zimple/src/input/Keyboard.js",
    "importStyle": "Keyboard",
    "description": "Mouse class provides a small abstraction layer to make Mouse events more EventTarget friendly\n\nTODO handle dragging",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "src/core/EventTarget.js~EventTarget"
    ]
  },
  {
    "__docId__": 144,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/input/Keyboard.js~Keyboard",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/input/Keyboard.js~Keyboard#constructor",
    "access": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "target",
        "optional": true,
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 145,
    "kind": "member",
    "name": "target",
    "memberof": "src/input/Keyboard.js~Keyboard",
    "static": false,
    "longname": "src/input/Keyboard.js~Keyboard#target",
    "access": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 146,
    "kind": "member",
    "name": "_keyboardEvents",
    "memberof": "src/input/Keyboard.js~Keyboard",
    "static": false,
    "longname": "src/input/Keyboard.js~Keyboard#_keyboardEvents",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"press\": *, \"down\": *}"
      ]
    }
  },
  {
    "__docId__": 147,
    "kind": "method",
    "name": "destroy",
    "memberof": "src/input/Keyboard.js~Keyboard",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/input/Keyboard.js~Keyboard#destroy",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 148,
    "kind": "method",
    "name": "_keyPressHandler",
    "memberof": "src/input/Keyboard.js~Keyboard",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/input/Keyboard.js~Keyboard#_keyPressHandler",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 149,
    "kind": "method",
    "name": "_keyDownHandler",
    "memberof": "src/input/Keyboard.js~Keyboard",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/input/Keyboard.js~Keyboard#_keyDownHandler",
    "access": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 150,
    "kind": "file",
    "name": "src/input/Mouse.js",
    "content": "import EventTarget from '../core/EventTarget';\n\n/**\n * Mouse class provides a small abstraction layer to make Mouse events more EventTarget friendly\n *\n * TODO handle dragging\n *\n */\nclass Mouse extends EventTarget {\n\n    constructor(target = window) {\n        super();\n\n        this.target = target;\n\n        this.position = {\n            x : 0,\n            y : 0\n        };\n\n        // setup events\n        this._mouseEvents = {\n            move : this._mouseMoveHandler.bind( this )\n        };\n\n        target.addEventListener('mousemove', this._mouseEvents.move);\n\n    }\n\n    destroy() {\n        this.target.removeEventListener('mousemove', this._mouseEvents.move);\n    }\n\n    _mouseMoveHandler(event) {\n\n        // save latest points\n        this.position = {\n            x : event.clientX,\n            y : event.clientY\n        };\n\n        this.trigger('move', event);\n\n    }\n\n}\n\nexport default Mouse;\n",
    "static": true,
    "longname": "src/input/Mouse.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 151,
    "kind": "class",
    "name": "Mouse",
    "memberof": "src/input/Mouse.js",
    "static": true,
    "longname": "src/input/Mouse.js~Mouse",
    "access": null,
    "export": true,
    "importPath": "zimple/src/input/Mouse.js",
    "importStyle": "Mouse",
    "description": "Mouse class provides a small abstraction layer to make Mouse events more EventTarget friendly\n\nTODO handle dragging",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "src/core/EventTarget.js~EventTarget"
    ]
  },
  {
    "__docId__": 152,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/input/Mouse.js~Mouse",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/input/Mouse.js~Mouse#constructor",
    "access": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "target",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "window",
        "defaultValue": "window"
      }
    ]
  },
  {
    "__docId__": 153,
    "kind": "member",
    "name": "target",
    "memberof": "src/input/Mouse.js~Mouse",
    "static": false,
    "longname": "src/input/Mouse.js~Mouse#target",
    "access": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 154,
    "kind": "member",
    "name": "position",
    "memberof": "src/input/Mouse.js~Mouse",
    "static": false,
    "longname": "src/input/Mouse.js~Mouse#position",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"x\": *, \"y\": *}"
      ]
    }
  },
  {
    "__docId__": 155,
    "kind": "member",
    "name": "_mouseEvents",
    "memberof": "src/input/Mouse.js~Mouse",
    "static": false,
    "longname": "src/input/Mouse.js~Mouse#_mouseEvents",
    "access": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"move\": *}"
      ]
    }
  },
  {
    "__docId__": 156,
    "kind": "method",
    "name": "destroy",
    "memberof": "src/input/Mouse.js~Mouse",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/input/Mouse.js~Mouse#destroy",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 157,
    "kind": "method",
    "name": "_mouseMoveHandler",
    "memberof": "src/input/Mouse.js~Mouse",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/input/Mouse.js~Mouse#_mouseMoveHandler",
    "access": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 158,
    "kind": "member",
    "name": "position",
    "memberof": "src/input/Mouse.js~Mouse",
    "static": false,
    "longname": "src/input/Mouse.js~Mouse#position",
    "access": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"x\": *, \"y\": *}"
      ]
    }
  },
  {
    "__docId__": 159,
    "kind": "file",
    "name": "src/input/Touch.js",
    "content": "import _ from 'lodash';\n\nimport EventTarget from '../core/EventTarget';\n\n/**\n *\n * These constants represent gestures that the touch instance will try to match\n *\n *\n */\nconst GESTURES_DEFINITIONS = {\n\n    /*\n\n     SWIPE DETECTOR\n\n     */\n    'swipe': {\n        detect: function (events, options) {\n\n            let detection = null;\n\n            // only detect swipes with multiple events\n            if (events.length > 1) {\n                let first = _.first(events);\n                let last = _.last(events);\n\n                // Swipe with one finger only.\n                if (!isMultiTouch(first) && !isMultiTouch(last)) {\n\n                    let deltaX = last.touches[0].screenX - first.touches[0].screenX;\n                    let deltaY = last.touches[0].screenY - first.touches[0].screenY;\n\n                    let aDeltaX = Math.abs(deltaX);\n                    let aDeltaY = Math.abs(deltaY);\n\n                    // determine direction by comparison\n                    if (aDeltaX > (2 * aDeltaY) && aDeltaX > options.swipeThreshold) {\n\n                        detection = {\n                            axis: 'x',\n                            distance: {\n                                x: deltaX,\n                                y: deltaY\n                            }\n                        }\n\n                    } else if ( options.verticalSwipe && aDeltaY > (2 * aDeltaX)) {\n\n                        detection = {\n                            axis: 'y',\n                            distance: {\n                                x: deltaX,\n                                y: deltaY\n                            }\n                        }\n\n                    }\n\n                }\n            }\n\n            return detection;\n        },\n        dispatchEvent(target, eventData) {\n\n            // create event\n            let swipeEvent = document.createEvent('CustomEvent');\n            swipeEvent.initCustomEvent('swipe', true, false, null);\n            swipeEvent.distance = eventData.distance;\n            swipeEvent.axis = eventData.axis;\n\n            // dispatch it through the DOM\n            target.dispatchEvent(swipeEvent);\n\n        },\n        repeat: false\n    },\n\n    /*\n\n     ZOOM DETECTOR\n\n     */\n    'zoom': {\n        detect: function (events) {\n            let detection = null;\n\n            // only detect zooms with multiple events\n            if (events.length >= 2) {\n\n                let first = events[events.length - 2];\n                let last = events[events.length - 1];\n\n                // detect multiple multi touch events\n                if (isMultiTouch(first) && isMultiTouch(last)) {\n\n                    // get distances for both points\n                    let firstDistance = touchDistance(first);\n                    let lastDistance = touchDistance(last);\n\n                    if (firstDistance < lastDistance ) {\n\n                        // TODO calc center point\n\n                        return {\n                            distance : lastDistance,\n                            center : touchCenter(last)\n                        }\n                    }\n                }\n            }\n\n            return detection;\n        },\n        dispatchEvent(target, eventData) {\n\n            // create event\n            let swipeEvent = document.createEvent('CustomEvent');\n            swipeEvent.initCustomEvent('zoom', true, false, null);\n            swipeEvent.distance = eventData.distance;\n\n            // dispatch it through the DOM\n            target.dispatchEvent(swipeEvent);\n\n        },\n        repeat: true\n    },\n\n    'pinch': {\n        detect: function (events) {\n            let detection = null;\n\n            // only detect zooms with multiple events\n            if (events.length >= 2) {\n\n                let first = events[events.length - 2];\n                let last = events[events.length - 1];\n\n                // detect multiple multi touch events\n                if (isMultiTouch(first) && isMultiTouch(last)) {\n\n                    // get distances for both points\n                    let firstDistance = touchDistance(first);\n                    let lastDistance = touchDistance(last);\n\n                    if (firstDistance > lastDistance ) {\n\n                        return {\n                            distance : lastDistance,\n                            center : touchCenter(last)\n                        }\n                    }\n                }\n            }\n\n            return detection;\n        },\n        dispatchEvent(target, eventData) {\n\n            // create event\n            let swipeEvent = document.createEvent('CustomEvent');\n            swipeEvent.initCustomEvent('zoom', true, false, null);\n            swipeEvent.distance = eventData.distance;\n\n            // dispatch it through the DOM\n            target.dispatchEvent(swipeEvent);\n\n        },\n        repeat: true\n    }\n\n};\n\nfunction isMultiTouch(event) {\n    return event.touches.length > 1;\n}\n\n/**\n * Get distance between two touches of an event\n * @param event\n * @returns {number} distance in pixels between touches\n */\nfunction touchDistance(event) {\n\n    let a = event.touches[0];\n    let b = event.touches[1];\n\n    let aX = a.clientX;\n    let aY = a.clientY;\n\n    let bX = b.clientX;\n    let bY = b.clientY;\n\n    return Math.sqrt( Math.pow(bX - aX, 2) + Math.pow(bY - aY, 2) );\n\n}\n\n/**\n * Get center of multi touch\n * @param event\n */\nfunction touchCenter(event) {\n    if ( isMultiTouch(event) ) {\n\n        let a = event.touches[0];\n        let b = event.touches[1];\n\n        let aX = a.clientX;\n        let aY = a.clientY;\n\n        let bX = b.clientX;\n        let bY = b.clientY;\n\n        //         start\n        let x = aX + ((bX - aX) / 2);\n        let y = aY + ((bY - aY) / 2);\n\n        // console.log( aY, bY);\n\n        return {\n            x : x,\n            y : y\n        }\n\n    } else {\n        let touch = event.touches[0];\n\n        return {\n            x : touch.clientX,\n            y : touch.clientY\n        }\n    }\n}\n\n\n/**\n * Class to track simple touch gestures. Inspired partly by hammer.js\n *\n * // TODO configure detectors to avoid useless operations on multiple objects\n *\n */\nclass Touch extends EventTarget {\n\n    constructor(target, options = {}) {\n        super();\n\n        this.target = target;\n        this.options = _.defaults(options, Touch.defaultOptions); // TODO use defaults\n\n        // create and store bound functions that are used as event listeners\n        this._touchEvents = {\n            start: _.bind(this._touchStartHandler, this),\n            move: _.bind(this._touchMoveHandler, this),\n            end: _.bind(this._touchEndHandler, this)\n        };\n\n        this.target.addEventListener('touchstart', this._touchEvents.start);\n        this.target.addEventListener('touchmove', this._touchEvents.move);\n        this.target.addEventListener('touchend', this._touchEvents.end);\n\n        if (this.options.bindWindowEnd) {\n            window.addEventListener('touchend', this._touchEvents.end);\n        }\n\n    }\n\n    /* =======\n\n     Public methods\n\n     ======== */\n    destroy() {\n\n        this.target.removeEventListener('touchstart', this._touchEvents.start);\n        this.target.removeEventListener('touchmove', this._touchEvents.move);\n        this.target.removeEventListener('touchend', this._touchEvents.end);\n\n        if (this.options.bindWindowEnd) {\n            window.removeEventListener('touchend', this._touchEvents.end);\n        }\n\n    }\n\n    /* =======\n\n     Private methods\n\n     ======== */\n\n    _start(event) {\n\n        // in case 'end()' isn't called properly // TODO can this happen?\n        if (this.isTouched) this.end();\n\n        // set 'touched' flag\n        this.isTouched = true;\n\n        // reset event buffer\n        this._eventBuffer = [event];\n\n        // reset current gestures\n        this._currentGestures = {};\n\n        this.trigger('start', event);\n\n    }\n\n    _move(event) {\n        this._eventBuffer.push(event);\n\n        // Run detectors\n        for (let gesture in GESTURES_DEFINITIONS) {\n\n            let gestureDef = GESTURES_DEFINITIONS[gesture];\n            let gestureInfo = gestureDef.detect(this._eventBuffer, this.options);\n\n            // if gesture detected\n            if (gestureInfo) {\n\n                // prevent repeat events on gestures that only should happen once per touch cycle (swipe for example). Could also be handled in touchend?\n                if ( gestureDef.repeat || (!gestureDef.repeat && !this._currentGestures[gesture]) ) {\n\n                    // attempt to prevent default\n                    event.preventDefault();\n\n                    // save gesture\n                    this._currentGestures[gesture] = gestureInfo;\n\n                    if (this.options.domEvents) {\n                        gestureDef.dispatchEvent(this.target, gestureInfo);\n                    }\n\n                    this.trigger(gesture, gestureInfo);\n                }\n\n            }\n        }\n\n\n        this.trigger('move', event);\n\n    }\n\n    _end(event) {\n        this._eventBuffer = [];\n        this.isTouched = false;\n\n        this.trigger('end', event);\n    }\n\n    /* =======\n\n     Event Handlers\n\n     ======== */\n\n    _touchStartHandler(event) {\n\n        // standard behviour is too disable scrolling and zooming on multi touch\n        if (event.touches.length > 1) {\n            event.preventDefault();\n        }\n\n        // if we're already touching, and another finger starts touching, treat it as a move\n        if (this.isTouched) {\n            this._move(event);\n        } else {\n            this._start(event);\n        }\n\n    }\n\n    _touchMoveHandler(event) {\n\n        // standard behviour is too disable scrolling and zooming on multi touch\n        if (event.touches.length > 1) {\n            event.preventDefault();\n        }\n\n        this._move(event);\n    }\n\n    _touchEndHandler(event) {\n        this._end(event);\n    }\n\n}\n\n\nTouch.defaultOptions = {\n\n    verticalSwipe: false, // TODO rename. double negative\n    swipeThreshold: 10,\n    domEvents: true\n\n};\n\nexport default Touch",
    "static": true,
    "longname": "src/input/Touch.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 160,
    "kind": "variable",
    "name": "GESTURES_DEFINITIONS",
    "memberof": "src/input/Touch.js",
    "static": true,
    "longname": "src/input/Touch.js~GESTURES_DEFINITIONS",
    "access": null,
    "export": false,
    "importPath": "zimple/src/input/Touch.js",
    "importStyle": null,
    "description": "\nThese constants represent gestures that the touch instance will try to match",
    "lineNumber": 11,
    "type": {
      "types": [
        "{\"swipe\": *, \"zoom\": *, \"pinch\": *}"
      ]
    }
  },
  {
    "__docId__": 161,
    "kind": "function",
    "name": "isMultiTouch",
    "memberof": "src/input/Touch.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/input/Touch.js~isMultiTouch",
    "access": null,
    "export": false,
    "importPath": "zimple/src/input/Touch.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 175,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 162,
    "kind": "function",
    "name": "touchDistance",
    "memberof": "src/input/Touch.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/input/Touch.js~touchDistance",
    "access": null,
    "export": false,
    "importPath": "zimple/src/input/Touch.js",
    "importStyle": null,
    "description": "Get distance between two touches of an event",
    "lineNumber": 184,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} distance in pixels between touches"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "distance in pixels between touches"
    }
  },
  {
    "__docId__": 163,
    "kind": "function",
    "name": "touchCenter",
    "memberof": "src/input/Touch.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/input/Touch.js~touchCenter",
    "access": null,
    "export": false,
    "importPath": "zimple/src/input/Touch.js",
    "importStyle": null,
    "description": "Get center of multi touch",
    "lineNumber": 203,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"x\": *, \"y\": *}"
      ]
    }
  },
  {
    "__docId__": 164,
    "kind": "class",
    "name": "Touch",
    "memberof": "src/input/Touch.js",
    "static": true,
    "longname": "src/input/Touch.js~Touch",
    "access": null,
    "export": true,
    "importPath": "zimple/src/input/Touch.js",
    "importStyle": "Touch",
    "description": "Class to track simple touch gestures. Inspired partly by hammer.js\n\n// TODO configure detectors to avoid useless operations on multiple objects",
    "lineNumber": 243,
    "interface": false,
    "extends": [
      "src/core/EventTarget.js~EventTarget"
    ]
  },
  {
    "__docId__": 165,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/input/Touch.js~Touch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/input/Touch.js~Touch#constructor",
    "access": null,
    "description": null,
    "lineNumber": 245,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "target",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ]
  },
  {
    "__docId__": 166,
    "kind": "member",
    "name": "target",
    "memberof": "src/input/Touch.js~Touch",
    "static": false,
    "longname": "src/input/Touch.js~Touch#target",
    "access": null,
    "description": null,
    "lineNumber": 248,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 167,
    "kind": "member",
    "name": "options",
    "memberof": "src/input/Touch.js~Touch",
    "static": false,
    "longname": "src/input/Touch.js~Touch#options",
    "access": null,
    "description": null,
    "lineNumber": 249,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 168,
    "kind": "member",
    "name": "_touchEvents",
    "memberof": "src/input/Touch.js~Touch",
    "static": false,
    "longname": "src/input/Touch.js~Touch#_touchEvents",
    "access": null,
    "description": null,
    "lineNumber": 252,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"start\": *, \"move\": *, \"end\": *}"
      ]
    }
  },
  {
    "__docId__": 169,
    "kind": "method",
    "name": "destroy",
    "memberof": "src/input/Touch.js~Touch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/input/Touch.js~Touch#destroy",
    "access": null,
    "description": null,
    "lineNumber": 273,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 170,
    "kind": "method",
    "name": "_start",
    "memberof": "src/input/Touch.js~Touch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/input/Touch.js~Touch#_start",
    "access": null,
    "description": null,
    "lineNumber": 291,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 171,
    "kind": "member",
    "name": "isTouched",
    "memberof": "src/input/Touch.js~Touch",
    "static": false,
    "longname": "src/input/Touch.js~Touch#isTouched",
    "access": null,
    "description": null,
    "lineNumber": 297,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 172,
    "kind": "member",
    "name": "_eventBuffer",
    "memberof": "src/input/Touch.js~Touch",
    "static": false,
    "longname": "src/input/Touch.js~Touch#_eventBuffer",
    "access": null,
    "description": null,
    "lineNumber": 300,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 173,
    "kind": "member",
    "name": "_currentGestures",
    "memberof": "src/input/Touch.js~Touch",
    "static": false,
    "longname": "src/input/Touch.js~Touch#_currentGestures",
    "access": null,
    "description": null,
    "lineNumber": 303,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 174,
    "kind": "method",
    "name": "_move",
    "memberof": "src/input/Touch.js~Touch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/input/Touch.js~Touch#_move",
    "access": null,
    "description": null,
    "lineNumber": 309,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 175,
    "kind": "method",
    "name": "_end",
    "memberof": "src/input/Touch.js~Touch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/input/Touch.js~Touch#_end",
    "access": null,
    "description": null,
    "lineNumber": 345,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 176,
    "kind": "member",
    "name": "_eventBuffer",
    "memberof": "src/input/Touch.js~Touch",
    "static": false,
    "longname": "src/input/Touch.js~Touch#_eventBuffer",
    "access": null,
    "description": null,
    "lineNumber": 346,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 177,
    "kind": "member",
    "name": "isTouched",
    "memberof": "src/input/Touch.js~Touch",
    "static": false,
    "longname": "src/input/Touch.js~Touch#isTouched",
    "access": null,
    "description": null,
    "lineNumber": 347,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 178,
    "kind": "method",
    "name": "_touchStartHandler",
    "memberof": "src/input/Touch.js~Touch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/input/Touch.js~Touch#_touchStartHandler",
    "access": null,
    "description": null,
    "lineNumber": 358,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 179,
    "kind": "method",
    "name": "_touchMoveHandler",
    "memberof": "src/input/Touch.js~Touch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/input/Touch.js~Touch#_touchMoveHandler",
    "access": null,
    "description": null,
    "lineNumber": 374,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 180,
    "kind": "method",
    "name": "_touchEndHandler",
    "memberof": "src/input/Touch.js~Touch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/input/Touch.js~Touch#_touchEndHandler",
    "access": null,
    "description": null,
    "lineNumber": 384,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 181,
    "kind": "file",
    "name": "src/net/ImageLoader.js",
    "content": "import _ from \"lodash\";\n\nimport Loader from \"./Loader\";\n\nclass ImageLoader extends Loader {\n\n    constructor(url, srcset, sizes, options = {}) {\n\n        // make sure it's paused so we can change paused status\n        let paused = options.paused;\n\n        super(url, _.defaults({paused: true}, options) );\n\n        this.srcset = srcset;\n        this.sizes = sizes;\n\n        if ( !paused ) {\n            this.load();\n        }\n\n    }\n\n    /**\n     * Override load mechanism\n     */\n    load() {\n\n        let image = new Image();\n\n        image.onload = () => {\n            this.status = Loader.STATUS.LOADING;\n\n            this._promiseResolve({url : this.url, data: image, rawData: image});\n            this._handleLoadComplete();\n        };\n\n        image.onerror = () => {\n            this._promiseReject('Could not load Image : ');\n            this._handleLoadComplete();\n        };\n\n        // If already loaded call load handler manually\n        if (image.complete === true) {\n            setImmediate( () => image.onload() );\n        }\n\n        // Add properties to start the load\n        if (this.srcset) image.srcset = this.srcset;\n        if (this.sizes) image.sizes = this.sizes;\n        image.src = this.url;\n\n    }\n\n}\n\nexport default ImageLoader;",
    "static": true,
    "longname": "src/net/ImageLoader.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 182,
    "kind": "class",
    "name": "ImageLoader",
    "memberof": "src/net/ImageLoader.js",
    "static": true,
    "longname": "src/net/ImageLoader.js~ImageLoader",
    "access": null,
    "export": true,
    "importPath": "zimple/src/net/ImageLoader.js",
    "importStyle": "ImageLoader",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "src/net/Loader.js~Loader"
    ]
  },
  {
    "__docId__": 183,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/net/ImageLoader.js~ImageLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/net/ImageLoader.js~ImageLoader#constructor",
    "access": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      },
      {
        "name": "srcset",
        "types": [
          "*"
        ]
      },
      {
        "name": "sizes",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ]
  },
  {
    "__docId__": 184,
    "kind": "member",
    "name": "srcset",
    "memberof": "src/net/ImageLoader.js~ImageLoader",
    "static": false,
    "longname": "src/net/ImageLoader.js~ImageLoader#srcset",
    "access": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 185,
    "kind": "member",
    "name": "sizes",
    "memberof": "src/net/ImageLoader.js~ImageLoader",
    "static": false,
    "longname": "src/net/ImageLoader.js~ImageLoader#sizes",
    "access": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 186,
    "kind": "method",
    "name": "load",
    "memberof": "src/net/ImageLoader.js~ImageLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/net/ImageLoader.js~ImageLoader#load",
    "access": null,
    "description": "Override load mechanism",
    "lineNumber": 26,
    "params": []
  },
  {
    "__docId__": 187,
    "kind": "member",
    "name": "status",
    "memberof": "src/net/ImageLoader.js~ImageLoader",
    "static": false,
    "longname": "src/net/ImageLoader.js~ImageLoader#status",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 188,
    "kind": "file",
    "name": "src/net/Loader.js",
    "content": "// Third party dependencies\nimport _        from \"lodash\";\nimport xhr      from \"xhr\";\n\n// UZIK dependencies\nimport EventTarget from \"../core/EventTarget\";\n\n\nlet loaderID = 0;\n\nclass Loader extends EventTarget {\n\n    constructor(url, options = {paused : false, parseBody : true}) {\n        super();\n\n        this.url = url;\n        this.id = options.id || 'loader-'+loaderID++;\n\n        this.options = options;\n\n        // Load progress, at construct, it is always 0\n        this.progress = 0;\n\n        // Create Promise for this loader, and save the resolve and reject functions for later\n        this.promise = new Promise( (resolve, reject) => {\n            this._promiseResolve = resolve;\n            this._promiseReject = reject;\n        });\n\n        // Start or pause loading\n        if ( this.options.paused ) {\n            this.status = Loader.STATUS.PAUSED;\n        } else {\n            this.load();\n        }\n\n    }\n\n    load() {\n\n        // detect type of load\n        this.request = xhr({\n            url : this.url,\n            beforeSend : (nativeXHR) => {\n                // attach progress event. you never know\n                nativeXHR.addEventListener('progress', (event) => {\n                    this._handleLoadProgress(event); // force context to instance of preloader\n                });\n            }\n        }, (err, response, body) => {\n\n            let statusCodeCategory = parseInt( response.statusCode.toString()[0] );\n\n            if (err) {\n\n                this._promiseReject(new Error(response.text));\n                this._handleLoadComplete();\n\n            } else if ( _.includes( [4, 5], statusCodeCategory ) ) {\n\n\n\n            } else {\n\n                // always save a copy of the raw data\n                this.rawData = body;\n\n                // might want to parse the body\n                if (this.options.parseBody) {\n\n                    // in case there isn't an extension, resort to content-type sniffing and forcing the type\n                    if ( this.url.lastIndexOf('.') < this.url.lastIndexOf('/')) {\n                        let contentType = response.headers['content-type'];\n                        let type;\n                        if ( contentType.toLowerCase().includes('application/json') ) {\n                            type = 'json';\n                        }\n\n                        this.data = Loader.parseResponseBody( this.url, body, type);\n                    } else {\n                        this.data = Loader.parseResponseBody( this.url, body );\n                    }\n\n                } else {\n                    this.data = body;\n                }\n\n                this._promiseResolve({url : this.url, data: this.data, rawData: body});\n                this._handleLoadComplete();\n            }\n\n        });\n\n        this.status = Loader.STATUS.LOADING;\n\n        return this.promise;\n\n    }\n\n    _handleLoadProgress(event) {\n        if (event.lengthComputable) {\n            this.progress = event.loaded / event.total;\n            this.trigger('progress', {progress : this.progress});\n        }\n    }\n\n    /**\n     * Handle end of loading. including changing loader status and firing events\n     * @protected\n     */\n    _handleLoadComplete() {\n\n        this.status = Loader.STATUS.COMPLETE;\n        this.progress = 1;\n        this.trigger('complete', {target: this});\n\n    }\n\n}\n\n\n\n\n\n\n/**\n * Helper to return a more usable object from the preloader. Simple detection based on file extension\n *\n * @param url the loaded file's URL\n * @param body th loaded file's content\n * @param forceType sometimes we need to force parsing of a certain type regardless of it's file name\n */\nLoader.parseResponseBody = function (url, body, forceType = null) {\n\n    var returnObject;\n\n    var ext = (forceType !== null) ? forceType : url.substr( url.lastIndexOf('.')+1 );\n\n    switch (ext) {\n        case 'js' :\n            returnObject = document.createElement('script');\n            returnObject.textContent = body;\n            break;\n        case 'json' :\n            returnObject = JSON.parse( body );\n            break;\n        case 'svg' :\n            let tempDiv = document.createElement('div');\n            tempDiv.innerHTML = body;\n            returnObject = tempDiv.firstChild;\n            break;\n        default : // pass through\n            returnObject = body;\n    }\n\n    return returnObject;\n\n};\n\nLoader.STATUS = {\n    PAUSED      : 'paused',\n    LOADING     : 'loading',\n    COMPLETE    : 'complete'\n};\n\n\n\n/**\n *\n * PreloaderQueue\n *\n * Simple Event & Promise based queue mechanism for loading multiple preloaders\n *\n */\nclass LoaderQueue extends EventTarget {\n\n    constructor(urls = []) {\n        super();\n\n        // create an array of prelaoders for each url\n        this.loaders = [];\n\n        urls.forEach( (url) => {\n            this.add( url );\n        });\n\n        // Create promise and save it's callbacks to this instance for later access\n        this.promise = new Promise( (resolve, reject) => {\n            this._promiseResolve = resolve;\n            this._promiseReject = reject;\n        });\n\n        // For convenience, force trigger a progress event when there are no loads complete\n        // use setImmediate (probably with polyfill) to force triggering on next event loop (otherwise no listeners will have time to be added)\n        setImmediate( () => this._preloaderCompleteHandler() );\n\n    }\n\n    add(preloaderOrUrl) {\n\n        // determine if we should pause the loader based on how many are currently loading\n        let shouldPause = this.loaders.reduce( (total, loader) => { return total + (loader.status == Loader.STATUS.LOADING ? 1 : 0)}, 0) >= LoaderQueue.MAX_CONCURRENT;\n\n        // create preloader\n        let preloader = ( _.isString(preloaderOrUrl) ) ? new Loader(preloaderOrUrl, {paused: shouldPause} ) : preloaderOrUrl;\n\n        // Attach events\n        preloader.on('complete', this._preloaderCompleteHandler, this);\n        preloader.on('progress', this._preloaderProgressHandler, this);\n\n        this.loaders.push( preloader );\n\n        return preloader;\n    }\n\n    get progress() {\n\n        if (this.loaders.length == 0) {\n            return -1;\n        } else {\n            let totalProgress = this.loaders.reduce( (total, loader) => {return total + loader.progress}, 0);\n            return totalProgress / this.loaders.length;\n        }\n\n    }\n\n    _preloaderProgressHandler(event) {\n        this.trigger('progress', {progress : this.progress});\n    }\n\n    _preloaderCompleteHandler() {\n\n        // get number of complete loaders and total loaders in queue\n        var totalLoaders = this.loaders.length;\n\n        var completeLoaders = 0;\n        var currentLoaders = 0;\n        var currentProgress = 0;\n\n        // Count complete and current loaders, total their progress\n        this.loaders.forEach( loader => {\n\n            if (loader.status == Loader.STATUS.COMPLETE) {\n                completeLoaders++;\n            } else if (loader.status == Loader.STATUS.LOADING) {\n                currentLoaders++;\n            }\n\n        });\n\n        // Trigger events for progress and completion\n        if (completeLoaders === totalLoaders) {\n            this._promiseResolve(this.loaders);\n            this.trigger('complete'); // TODO return loaders? data?\n        } else {\n            this.trigger('progress', {progress: this.progress});\n\n            // if there are less current loaders than MAX_CONCURRENT, unpause them\n            if (currentLoaders < LoaderQueue.MAX_CONCURRENT) {\n\n                /*\n                Big one liner to unpause queued loaders :\n                - filters for paused loaders\n                - takes as many as possible, below MAX_CONCURRENT threshold\n                - starts load() on each Preloader instance\n                 */\n                this.loaders.filter( loader => loader.status == Loader.STATUS.PAUSED ).slice(0, LoaderQueue.MAX_CONCURRENT - currentLoaders).forEach(loader => loader.load() );\n\n            }\n\n        }\n\n\n    }\n\n}\n\nLoaderQueue.MAX_CONCURRENT = 5;\n\nexport {Loader as default, LoaderQueue};",
    "static": true,
    "longname": "src/net/Loader.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 189,
    "kind": "variable",
    "name": "loaderID",
    "memberof": "src/net/Loader.js",
    "static": true,
    "longname": "src/net/Loader.js~loaderID",
    "access": null,
    "export": false,
    "importPath": "zimple/src/net/Loader.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 190,
    "kind": "class",
    "name": "Loader",
    "memberof": "src/net/Loader.js",
    "static": true,
    "longname": "src/net/Loader.js~Loader",
    "access": null,
    "export": false,
    "importPath": "zimple/src/net/Loader.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "src/core/EventTarget.js~EventTarget"
    ]
  },
  {
    "__docId__": 191,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/net/Loader.js~Loader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/net/Loader.js~Loader#constructor",
    "access": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{\"paused\": boolean, \"parseBody\": boolean}"
        ],
        "defaultRaw": {
          "paused": false,
          "parseBody": true
        },
        "defaultValue": "{\"paused\":false,\"parseBody\":true}"
      }
    ]
  },
  {
    "__docId__": 192,
    "kind": "member",
    "name": "url",
    "memberof": "src/net/Loader.js~Loader",
    "static": false,
    "longname": "src/net/Loader.js~Loader#url",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 193,
    "kind": "member",
    "name": "id",
    "memberof": "src/net/Loader.js~Loader",
    "static": false,
    "longname": "src/net/Loader.js~Loader#id",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 194,
    "kind": "member",
    "name": "options",
    "memberof": "src/net/Loader.js~Loader",
    "static": false,
    "longname": "src/net/Loader.js~Loader#options",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 195,
    "kind": "member",
    "name": "progress",
    "memberof": "src/net/Loader.js~Loader",
    "static": false,
    "longname": "src/net/Loader.js~Loader#progress",
    "access": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 196,
    "kind": "member",
    "name": "promise",
    "memberof": "src/net/Loader.js~Loader",
    "static": false,
    "longname": "src/net/Loader.js~Loader#promise",
    "access": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 197,
    "kind": "member",
    "name": "_promiseResolve",
    "memberof": "src/net/Loader.js~Loader",
    "static": false,
    "longname": "src/net/Loader.js~Loader#_promiseResolve",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 198,
    "kind": "member",
    "name": "_promiseReject",
    "memberof": "src/net/Loader.js~Loader",
    "static": false,
    "longname": "src/net/Loader.js~Loader#_promiseReject",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 199,
    "kind": "member",
    "name": "status",
    "memberof": "src/net/Loader.js~Loader",
    "static": false,
    "longname": "src/net/Loader.js~Loader#status",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 200,
    "kind": "method",
    "name": "load",
    "memberof": "src/net/Loader.js~Loader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/net/Loader.js~Loader#load",
    "access": null,
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 201,
    "kind": "member",
    "name": "request",
    "memberof": "src/net/Loader.js~Loader",
    "static": false,
    "longname": "src/net/Loader.js~Loader#request",
    "access": null,
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 202,
    "kind": "member",
    "name": "rawData",
    "memberof": "src/net/Loader.js~Loader",
    "static": false,
    "longname": "src/net/Loader.js~Loader#rawData",
    "access": null,
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 203,
    "kind": "member",
    "name": "data",
    "memberof": "src/net/Loader.js~Loader",
    "static": false,
    "longname": "src/net/Loader.js~Loader#data",
    "access": null,
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 204,
    "kind": "member",
    "name": "data",
    "memberof": "src/net/Loader.js~Loader",
    "static": false,
    "longname": "src/net/Loader.js~Loader#data",
    "access": null,
    "description": null,
    "lineNumber": 81,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 205,
    "kind": "member",
    "name": "data",
    "memberof": "src/net/Loader.js~Loader",
    "static": false,
    "longname": "src/net/Loader.js~Loader#data",
    "access": null,
    "description": null,
    "lineNumber": 85,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 206,
    "kind": "member",
    "name": "status",
    "memberof": "src/net/Loader.js~Loader",
    "static": false,
    "longname": "src/net/Loader.js~Loader#status",
    "access": null,
    "description": null,
    "lineNumber": 94,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 207,
    "kind": "method",
    "name": "_handleLoadProgress",
    "memberof": "src/net/Loader.js~Loader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/net/Loader.js~Loader#_handleLoadProgress",
    "access": null,
    "description": null,
    "lineNumber": 100,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 208,
    "kind": "member",
    "name": "progress",
    "memberof": "src/net/Loader.js~Loader",
    "static": false,
    "longname": "src/net/Loader.js~Loader#progress",
    "access": null,
    "description": null,
    "lineNumber": 102,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 209,
    "kind": "method",
    "name": "_handleLoadComplete",
    "memberof": "src/net/Loader.js~Loader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/net/Loader.js~Loader#_handleLoadComplete",
    "access": "protected",
    "description": "Handle end of loading. including changing loader status and firing events",
    "lineNumber": 111,
    "params": []
  },
  {
    "__docId__": 210,
    "kind": "member",
    "name": "status",
    "memberof": "src/net/Loader.js~Loader",
    "static": false,
    "longname": "src/net/Loader.js~Loader#status",
    "access": null,
    "description": null,
    "lineNumber": 113,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 211,
    "kind": "member",
    "name": "progress",
    "memberof": "src/net/Loader.js~Loader",
    "static": false,
    "longname": "src/net/Loader.js~Loader#progress",
    "access": null,
    "description": null,
    "lineNumber": 114,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 212,
    "kind": "function",
    "name": "parseResponseBody",
    "memberof": "src/net/Loader.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/net/Loader.js~parseResponseBody",
    "access": null,
    "export": false,
    "importPath": "zimple/src/net/Loader.js",
    "importStyle": null,
    "description": "Helper to return a more usable object from the preloader. Simple detection based on file extension",
    "lineNumber": 133,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "the loaded file's URL"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "body",
        "description": "th loaded file's content"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "forceType",
        "description": "sometimes we need to force parsing of a certain type regardless of it's file name"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 213,
    "kind": "class",
    "name": "LoaderQueue",
    "memberof": "src/net/Loader.js",
    "static": true,
    "longname": "src/net/Loader.js~LoaderQueue",
    "access": null,
    "export": true,
    "importPath": "zimple/src/net/Loader.js",
    "importStyle": "{LoaderQueue}",
    "description": "\nPreloaderQueue\n\nSimple Event & Promise based queue mechanism for loading multiple preloaders",
    "lineNumber": 175,
    "interface": false,
    "extends": [
      "src/core/EventTarget.js~EventTarget"
    ]
  },
  {
    "__docId__": 214,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/net/Loader.js~LoaderQueue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/net/Loader.js~LoaderQueue#constructor",
    "access": null,
    "description": null,
    "lineNumber": 177,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "urls",
        "optional": true,
        "types": [
          "*[]"
        ],
        "defaultRaw": [],
        "defaultValue": "[]"
      }
    ]
  },
  {
    "__docId__": 215,
    "kind": "member",
    "name": "loaders",
    "memberof": "src/net/Loader.js~LoaderQueue",
    "static": false,
    "longname": "src/net/Loader.js~LoaderQueue#loaders",
    "access": null,
    "description": null,
    "lineNumber": 181,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 216,
    "kind": "member",
    "name": "promise",
    "memberof": "src/net/Loader.js~LoaderQueue",
    "static": false,
    "longname": "src/net/Loader.js~LoaderQueue#promise",
    "access": null,
    "description": null,
    "lineNumber": 188,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 217,
    "kind": "member",
    "name": "_promiseResolve",
    "memberof": "src/net/Loader.js~LoaderQueue",
    "static": false,
    "longname": "src/net/Loader.js~LoaderQueue#_promiseResolve",
    "access": null,
    "description": null,
    "lineNumber": 189,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 218,
    "kind": "member",
    "name": "_promiseReject",
    "memberof": "src/net/Loader.js~LoaderQueue",
    "static": false,
    "longname": "src/net/Loader.js~LoaderQueue#_promiseReject",
    "access": null,
    "description": null,
    "lineNumber": 190,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 219,
    "kind": "method",
    "name": "add",
    "memberof": "src/net/Loader.js~LoaderQueue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/net/Loader.js~LoaderQueue#add",
    "access": null,
    "description": null,
    "lineNumber": 199,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "preloaderOrUrl",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 220,
    "kind": "get",
    "name": "progress",
    "memberof": "src/net/Loader.js~LoaderQueue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/net/Loader.js~LoaderQueue#progress",
    "access": null,
    "description": null,
    "lineNumber": 216,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 221,
    "kind": "method",
    "name": "_preloaderProgressHandler",
    "memberof": "src/net/Loader.js~LoaderQueue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/net/Loader.js~LoaderQueue#_preloaderProgressHandler",
    "access": null,
    "description": null,
    "lineNumber": 227,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 222,
    "kind": "method",
    "name": "_preloaderCompleteHandler",
    "memberof": "src/net/Loader.js~LoaderQueue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/net/Loader.js~LoaderQueue#_preloaderCompleteHandler",
    "access": null,
    "description": null,
    "lineNumber": 231,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 223,
    "kind": "file",
    "name": "src/utils/AspectRatio.js",
    "content": "const AspectRatio = {\n\n    FIT_MODE: {\n        COVER: 'cover',\n        CONTAIN: 'contain'\n    },\n\n    /**\n     * Fits content to containers, either covering or containing them\n     * @param content object describing a rectangle\n     * @param container object describuing a rectangle\n     * @param fitMode cover or contain content in container. refers to static properties of AspectRatio object\n     */\n    fitContent : function (content, container, fitMode = AspectRatio.FIT_MODE.COVER) {\n\n        // calc ratios to decide how to do covering or containing\n        const contentRatio = content.width / content.height;\n        const containerRatio = container.width / container.height;\n\n        let computedWidth;\n        let computedHeight;\n\n        // fit to width / height\n        if ( (contentRatio < containerRatio && fitMode == AspectRatio.FIT_MODE.COVER) || (contentRatio > containerRatio && fitMode == AspectRatio.FIT_MODE.CONTAIN) ) {\n            computedWidth   = container.width;\n            computedHeight  = container.width / contentRatio;\n        } else {\n            computedWidth   = container.height * contentRatio;\n            computedHeight  = container.height;\n        }\n\n        const computedY = (container.height - computedHeight) / 2;\n        const computedX = (container.width - computedWidth) / 2;\n\n        // return new rect with proper values\n        return {\n            y : computedY,\n            x : computedX,\n            width : computedWidth,\n            height : computedHeight\n        };\n\n    }\n\n};\n\n\nexport default AspectRatio;",
    "static": true,
    "longname": "src/utils/AspectRatio.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 224,
    "kind": "variable",
    "name": "AspectRatio",
    "memberof": "src/utils/AspectRatio.js",
    "static": true,
    "longname": "src/utils/AspectRatio.js~AspectRatio",
    "access": null,
    "export": true,
    "importPath": "zimple/src/utils/AspectRatio.js",
    "importStyle": "AspectRatio",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"FIT_MODE\": *, \"fitContent\": *}"
      ]
    }
  },
  {
    "__docId__": 225,
    "kind": "file",
    "name": "src/utils/Style.js",
    "content": "import _ from \"lodash\";\n\n// browser prefixes\nconst prefixes = [\n    'Webkit',\n    'Moz',\n    'MS',\n    'O'\n];\n\n// Cache of modifier functions once the proper prefix has been found\nconst prefixedModifierCache = {};\n\n// Test element for finding prefixed properties\nconst prefixTestEl = document.createElement('div');\n\n/**\n * Create a prefixed aware CSS modifier for a property.\n *\n * Generated modifiers are stored in the const above\n *\n * @param property\n * @returns {*}\n */\nfunction createModifier(property) {\n    // prefixed properties are camel cased\n    let propertyCap = _.capitalize(property);\n\n    // get all prefixed properties (and un-prefixed in first position)\n    let prefixedProperties = [property].concat( _.map(prefixes, function(prefix){ return prefix + propertyCap}) );\n\n    // find the first acceptable property name\n    let prefixedPropName = _.find(prefixedProperties, function(prop){ return prop in prefixTestEl.style });\n\n    // cache modifier to object\n    prefixedModifierCache[property] = function(targetStyle, value) {\n        targetStyle[prefixedPropName] = value;\n    };\n\n    return prefixedModifierCache[property];\n}\n\n/**\n * Style util\n *\n * @type {{set: Style.set, get: Style.get, formatValue: Style.formatValue}}\n */\nconst Style = {\n\n    set : function (element, property, value) {\n\n        let elementStyles =  ( _.isElement(element) ) ? element.style : element;\n\n        // internally we always use an object and loop over its keys and values\n        let propObj;\n\n        // convert string to use in object, or just use object\n        if (_.isString(property)) {\n            propObj = {};\n            propObj[property] = value\n        } else {\n            propObj = property;\n        }\n\n        // treat property as an object of csspropertyname : value pairs\n        for ( let prop in propObj) {\n            if (propObj.hasOwnProperty(prop)) {\n\n                // if a the value of this property isn't already a string, format it.\n                let specifiedValue = propObj[prop];\n                let finalValue;\n\n                if (specifiedValue !== null) {\n                    finalValue = _.isString(specifiedValue) ? specifiedValue : this.formatValue(prop, specifiedValue);\n                } else {\n                    finalValue = null;\n                }\n\n\n                // get cached or new modifier function\n                ( prefixedModifierCache[prop] || createModifier(prop) )(elementStyles, finalValue);\n            }\n        }\n\n    },\n\n    /**\n     * Get style applied to this element\n     *\n     * TODO check on element.style object if we can detect !important rules someway\n     *\n     * @param element\n     * @param property\n     * @returns {*}\n     */\n    get : function(element, property) {\n        return window.getComputedStyle( element )[ property ];\n    },\n\n    /**\n     *\n     * @param property name of the CSS property\n     * @param value value of the property that isn't a String\n     * @param units\n     * @returns {*}\n     */\n    formatValue : function(property, value, units = 'px') {\n\n        let formattedValue;\n\n        switch(property) {\n            case 'top' :\n            case 'right' :\n            case 'bottom' :\n            case 'left' :\n            case 'minWidth' :\n            case 'minHeight' :\n            case 'width' :\n            case 'height' :\n                formattedValue = value.toString() + units;\n                break;\n\n            case 'opacity' :\n                formattedValue = value;\n                break;\n        }\n\n        // format to empty string\n        if ( formattedValue === null) formattedValue = '';\n\n        return formattedValue;\n    }\n\n};\n\nexport default Style;\n",
    "static": true,
    "longname": "src/utils/Style.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 226,
    "kind": "variable",
    "name": "prefixes",
    "memberof": "src/utils/Style.js",
    "static": true,
    "longname": "src/utils/Style.js~prefixes",
    "access": null,
    "export": false,
    "importPath": "zimple/src/utils/Style.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string[]"
      ]
    }
  },
  {
    "__docId__": 227,
    "kind": "variable",
    "name": "prefixedModifierCache",
    "memberof": "src/utils/Style.js",
    "static": true,
    "longname": "src/utils/Style.js~prefixedModifierCache",
    "access": null,
    "export": false,
    "importPath": "zimple/src/utils/Style.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 228,
    "kind": "variable",
    "name": "prefixTestEl",
    "memberof": "src/utils/Style.js",
    "static": true,
    "longname": "src/utils/Style.js~prefixTestEl",
    "access": null,
    "export": false,
    "importPath": "zimple/src/utils/Style.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 229,
    "kind": "function",
    "name": "createModifier",
    "memberof": "src/utils/Style.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/Style.js~createModifier",
    "access": null,
    "export": false,
    "importPath": "zimple/src/utils/Style.js",
    "importStyle": null,
    "description": "Create a prefixed aware CSS modifier for a property.\n\nGenerated modifiers are stored in the const above",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "property",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 230,
    "kind": "variable",
    "name": "Style",
    "memberof": "src/utils/Style.js",
    "static": true,
    "longname": "src/utils/Style.js~Style",
    "access": null,
    "export": true,
    "importPath": "zimple/src/utils/Style.js",
    "importStyle": "Style",
    "description": "Style util",
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "{set: Style.set, get: Style.get, formatValue: Style.formatValue}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 231,
    "kind": "file",
    "name": "src/utils/WindowManager.js",
    "content": "import _            from \"lodash\";\nimport EventTarget  from \"../core/EventTarget\";\n\n// Cross platform function to get scroll position\nconst getScrollTop = function () {\n    return window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;\n};\n\nlet WindowManager;\n\nclass WindowManagerClass extends EventTarget{\n\n    constructor() {\n        // Singleton check\n        if ( WindowManager ) {\n            throw new Error(\"WindowManager is a Singleton, an instance already exists\");\n        }\n\n        super();\n    }\n\n    /* ==========================\n\n     Initialization function\n\n     ========================== */\n    initialize (config) {\n\n        if ( !this.initialized ) {\n            this.config = _.defaults(config || {}, WindowManagerClass.defaultConfig);\n\n            this.breakpoints = this.config.breakpoints;\n\n            // Create and save Event Handlers\n            this._domEvents = {};\n            this._domEvents.resize  = _.throttle(_.bind(this._resizeHandler, this), this.config.resizeThrottle);\n            this._domEvents.load    = _.bind(this._loadHandler, this);\n            this._domEvents.unload  = _.bind(this._unloadHandler, this);\n            this._domEvents.scroll  = _.throttle(_.bind(this._scrollHandler, this), this.config.scrollThrottle);\n\n            // listen for events\n            window.addEventListener('resize', this._domEvents.resize);\n            window.addEventListener('load',   this._domEvents.load);\n            window.addEventListener('unload', this._domEvents.unload);\n\n            this.bindScrollEvent();\n\n            // set up variable tracking\n            this.scrollPosition = this.scrollPosition || {top: getScrollTop()};\n\n            // cache window metrics now\n            this._updateMetrics();\n            this._updateScrollMetrics();\n\n            this._detectBreakpoint(true);\n\n            this.initialized = true;\n\n        }\n\n    }\n\n    /* ==========================\n\n     Public Members\n\n     ========================== */\n\n    // Allow binding & unbinding of scroll events\n    bindScrollEvent() {\n        window.addEventListener('scroll', this._domEvents.scroll);\n    }\n\n    unbindScrollEvent() {\n        window.removeEventListener('scroll', this._domEvents.scroll);\n    }\n\n    scrollTo(y = 0, x = 0) {\n        window.scrollTo(y, x);\n\n        this.scrollPosition.top = y;\n        this.scrollPosition.left = x;\n    }\n\n    /**\n     * Determine if the viewport is of a a minimum width\n     *\n     * @param {Object|String|Number} breakpoint. If of type object, assumes to be a named breakpoint object with a value propert, if a string, a named breakpoint's name, if a number the breakpoint's value. A number maybe used to arbitrarily check window width\n     * @returns {boolean}\n     */\n    minWidth(breakpoint) {\n\n        // Get numerical value for breakpoint\n        let breakpointValue;\n        if ( _.isNumber(breakpoint) ) {\n            breakpointValue = breakpoint;\n        } else if ( _.isString(breakpoint) ) {\n            breakpointValue = _.find( this.breakpoints, {name: breakpoint}).value;\n        } else if ( _.isObject(breakpoint) ) {\n            breakpointValue = breakpoint.value;\n        }\n\n        return this.width >= breakpointValue;\n    }\n\n    /* ==========================\n\n     Private Members\n\n     ========================== */\n    _updateMetrics() {\n        this.width = window.innerWidth;\n        this.height = window.innerHeight;\n    }\n\n    _updateScrollMetrics() {\n        this.scrollPosition.top = getScrollTop();\n    }\n\n    /**\n     * Called on window resize events to detect which breakpoint we're on\n     *\n     * @param supressEvents\n     * @private\n     */\n    _detectBreakpoint(supressEvents) {\n\n        // find biggest matching BP\n        var breakpoint = _.findLast(this.breakpoints, (bp) => {\n            return this.width >= bp.value;\n        });\n\n        // ony if the breakpoint has changed\n        if (this.currentBreakpoint != breakpoint) {\n            let previousBreakpoint = this.currentBreakpoint;\n            this.currentBreakpoint = breakpoint;\n\n            // dispatch event for breakpoint, simply cloning the BP object for the event data\n            if (!supressEvents) {\n                this.trigger('breakpoint', {breakpoint: _.clone(breakpoint), previous : _.clone(previousBreakpoint)}); // TODO make breakpoints immutable\n            }\n        }\n\n    }\n\n    /* ==========================\n\n     Event Handlers\n\n     ========================== */\n    _scrollHandler(event) {\n        var previousTop = this.scrollPosition.top;\n        this._updateScrollMetrics();\n        var currentTop = this.scrollPosition.top;\n\n        // determine direction by comparing previous scroll position\n        var direction = (previousTop < currentTop) ? 1 : -1;\n\n        // trigger custom event\n        this.trigger('scroll', {scrollPosition: this.scrollPosition, direction : direction, originalEvent: event});\n    }\n\n    _resizeHandler(event) {\n        this._updateMetrics();\n        this.trigger('resize', {width: this.width, height: this.height});\n        this._detectBreakpoint();\n    }\n\n    _unloadHandler() {\n        // window.scrollTo(0, 0);\n    }\n\n    _loadHandler() {\n        this.trigger('load');\n    }\n\n}\n\nWindowManagerClass.defaultConfig = {\n    scrollThrottle: 15, // number of ms between scroll events\n    resizeThrottle: 50, // number of ms between resize events\n    disableScrollClass: null, // class name to use for the disable scroll class. default is to apply styles directly\n    disableUserInputClass: null, // class name to use for the disable user input class. default is to apply styles directly\n};\n\n// Create our Singleton\nWindowManager = new WindowManagerClass();\n\n// Export singleton by default and Class if introspection needed\nexport {WindowManager as default, WindowManagerClass};\n",
    "static": true,
    "longname": "src/utils/WindowManager.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 232,
    "kind": "function",
    "name": "getScrollTop",
    "memberof": "src/utils/WindowManager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/WindowManager.js~getScrollTop",
    "access": null,
    "export": false,
    "importPath": "zimple/src/utils/WindowManager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 233,
    "kind": "class",
    "name": "WindowManagerClass",
    "memberof": "src/utils/WindowManager.js",
    "static": true,
    "longname": "src/utils/WindowManager.js~WindowManagerClass",
    "access": null,
    "export": true,
    "importPath": "zimple/src/utils/WindowManager.js",
    "importStyle": "{WindowManagerClass}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "src/core/EventTarget.js~EventTarget"
    ]
  },
  {
    "__docId__": 234,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/utils/WindowManager.js~WindowManagerClass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/WindowManager.js~WindowManagerClass#constructor",
    "access": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 235,
    "kind": "method",
    "name": "initialize",
    "memberof": "src/utils/WindowManager.js~WindowManagerClass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/WindowManager.js~WindowManagerClass#initialize",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "config",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 236,
    "kind": "member",
    "name": "config",
    "memberof": "src/utils/WindowManager.js~WindowManagerClass",
    "static": false,
    "longname": "src/utils/WindowManager.js~WindowManagerClass#config",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 237,
    "kind": "member",
    "name": "breakpoints",
    "memberof": "src/utils/WindowManager.js~WindowManagerClass",
    "static": false,
    "longname": "src/utils/WindowManager.js~WindowManagerClass#breakpoints",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 238,
    "kind": "member",
    "name": "_domEvents",
    "memberof": "src/utils/WindowManager.js~WindowManagerClass",
    "static": false,
    "longname": "src/utils/WindowManager.js~WindowManagerClass#_domEvents",
    "access": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 239,
    "kind": "member",
    "name": "scrollPosition",
    "memberof": "src/utils/WindowManager.js~WindowManagerClass",
    "static": false,
    "longname": "src/utils/WindowManager.js~WindowManagerClass#scrollPosition",
    "access": null,
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 240,
    "kind": "member",
    "name": "initialized",
    "memberof": "src/utils/WindowManager.js~WindowManagerClass",
    "static": false,
    "longname": "src/utils/WindowManager.js~WindowManagerClass#initialized",
    "access": null,
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 241,
    "kind": "method",
    "name": "bindScrollEvent",
    "memberof": "src/utils/WindowManager.js~WindowManagerClass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/WindowManager.js~WindowManagerClass#bindScrollEvent",
    "access": null,
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 242,
    "kind": "method",
    "name": "unbindScrollEvent",
    "memberof": "src/utils/WindowManager.js~WindowManagerClass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/WindowManager.js~WindowManagerClass#unbindScrollEvent",
    "access": null,
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 243,
    "kind": "method",
    "name": "scrollTo",
    "memberof": "src/utils/WindowManager.js~WindowManagerClass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/WindowManager.js~WindowManagerClass#scrollTo",
    "access": null,
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "y",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 0,
        "defaultValue": "0"
      },
      {
        "name": "x",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 0,
        "defaultValue": "0"
      }
    ]
  },
  {
    "__docId__": 244,
    "kind": "method",
    "name": "minWidth",
    "memberof": "src/utils/WindowManager.js~WindowManagerClass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/WindowManager.js~WindowManagerClass#minWidth",
    "access": null,
    "description": "Determine if the viewport is of a a minimum width",
    "lineNumber": 91,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object",
          "String",
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "breakpoint.",
        "description": "If of type object, assumes to be a named breakpoint object with a value propert, if a string, a named breakpoint's name, if a number the breakpoint's value. A number maybe used to arbitrarily check window width"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 245,
    "kind": "method",
    "name": "_updateMetrics",
    "memberof": "src/utils/WindowManager.js~WindowManagerClass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/WindowManager.js~WindowManagerClass#_updateMetrics",
    "access": null,
    "description": null,
    "lineNumber": 111,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 246,
    "kind": "member",
    "name": "width",
    "memberof": "src/utils/WindowManager.js~WindowManagerClass",
    "static": false,
    "longname": "src/utils/WindowManager.js~WindowManagerClass#width",
    "access": null,
    "description": null,
    "lineNumber": 112,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 247,
    "kind": "member",
    "name": "height",
    "memberof": "src/utils/WindowManager.js~WindowManagerClass",
    "static": false,
    "longname": "src/utils/WindowManager.js~WindowManagerClass#height",
    "access": null,
    "description": null,
    "lineNumber": 113,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 248,
    "kind": "method",
    "name": "_updateScrollMetrics",
    "memberof": "src/utils/WindowManager.js~WindowManagerClass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/WindowManager.js~WindowManagerClass#_updateScrollMetrics",
    "access": null,
    "description": null,
    "lineNumber": 116,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 249,
    "kind": "method",
    "name": "_detectBreakpoint",
    "memberof": "src/utils/WindowManager.js~WindowManagerClass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/WindowManager.js~WindowManagerClass#_detectBreakpoint",
    "access": "private",
    "description": "Called on window resize events to detect which breakpoint we're on",
    "lineNumber": 126,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "supressEvents",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 250,
    "kind": "member",
    "name": "currentBreakpoint",
    "memberof": "src/utils/WindowManager.js~WindowManagerClass",
    "static": false,
    "longname": "src/utils/WindowManager.js~WindowManagerClass#currentBreakpoint",
    "access": null,
    "description": null,
    "lineNumber": 136,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 251,
    "kind": "method",
    "name": "_scrollHandler",
    "memberof": "src/utils/WindowManager.js~WindowManagerClass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/WindowManager.js~WindowManagerClass#_scrollHandler",
    "access": null,
    "description": null,
    "lineNumber": 151,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 252,
    "kind": "method",
    "name": "_resizeHandler",
    "memberof": "src/utils/WindowManager.js~WindowManagerClass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/WindowManager.js~WindowManagerClass#_resizeHandler",
    "access": null,
    "description": null,
    "lineNumber": 163,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 253,
    "kind": "method",
    "name": "_unloadHandler",
    "memberof": "src/utils/WindowManager.js~WindowManagerClass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/WindowManager.js~WindowManagerClass#_unloadHandler",
    "access": null,
    "description": null,
    "lineNumber": 169,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 254,
    "kind": "method",
    "name": "_loadHandler",
    "memberof": "src/utils/WindowManager.js~WindowManagerClass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/WindowManager.js~WindowManagerClass#_loadHandler",
    "access": null,
    "description": null,
    "lineNumber": 173,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 256,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 257,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 258,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 259,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 260,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 261,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 262,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 263,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 264,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 265,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 266,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 267,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 268,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 269,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 270,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 271,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 272,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 273,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 274,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 275,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 276,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 277,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 278,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 279,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 280,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 281,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 282,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 283,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 284,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 285,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 286,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 287,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 288,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 289,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 290,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 291,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 292,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 293,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 294,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 295,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 296,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 297,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 298,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 299,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 300,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 301,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 302,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "lineNumber": 193,
    "builtinExternal": true
  },
  {
    "__docId__": 304,
    "kind": "external",
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 305,
    "kind": "external",
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 306,
    "kind": "external",
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 307,
    "kind": "external",
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 308,
    "kind": "external",
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 309,
    "kind": "external",
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 310,
    "kind": "external",
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 311,
    "kind": "external",
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "lineNumber": 34,
    "builtinExternal": true
  }
]